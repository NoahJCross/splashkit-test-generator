{
  "example": "#include \"logging.h\"\n\nusing namespace splashkit_lib;\n\nvoid run_logging_test()\n{\n write_line(\"If this test works, ten lines should be written to both the console and a test log file, not inclusive of this current line.\");\n log_level log_level = DEBUG;\n log_mode _log_mode;\n _log_mode = LOG_CONSOLE_AND_FILE;\n\n init_custom_logger(\"test_logging\", true, _log_mode);\n log(NONE, \"Testing with no[ne] logging level\");\n log(INFO, \"Testing info\");\n log(DEBUG, \"Testing debug\");\n log(WARNING, \"Testing warning\");\n log(ERROR, \"Testing error\");\n\n _log_mode = LOG_CONSOLE;\n init_custom_logger(_log_mode);\n log(NONE, \"Testing with no[ne] logging level\");\n log(INFO, \"Testing info\");\n log(DEBUG, \"Testing debug\");\n log(WARNING, \"Testing warning\");\n log(ERROR, \"Testing error\");\n\n _log_mode = LOG_FILE_ONLY;\n init_custom_logger(\"test_logging\", true, _log_mode);\n log(NONE, \"Testing with no[ne] logging level\");\n log(INFO, \"Testing info\");\n log(DEBUG, \"Testing debug\");\n log(WARNING, \"Testing warning\");\n log(ERROR, \"Testing error\");\n}",
  "tests": [
    {
      "description": "Ensures propper memory clean-up prior to exit, if needed.  Used in sk_init_looging ().",
      "name": "close_log_process",
      "return_description": null,
      "signature": "void close_log_process ();",
      "unique_global_name": "close_log_process"
    },
    {
      "description": "Initialises the logging mode for logged messages to be written to the text-based console.",
      "name": "init_custom_logger",
      "return_description": null,
      "signature": "void init_custom_logger (log_mode mode);",
      "unique_global_name": "init_custom_logger"
    },
    {
      "description": "Initialises the logging mode between either writing to a file or both a file and the text-based console.",
      "name": "init_custom_logger",
      "return_description": null,
      "signature": "void init_custom_logger (string app_name,bool override_prev_log,log_mode mode);",
      "unique_global_name": "init_custom_logger__name_override_mode"
    },
    {
      "description": "Send a message to the message log. The message will be written if the log level for\nthe program is set to display this.",
      "name": "log",
      "return_description": null,
      "signature": "void log(log_level level,string message);",
      "unique_global_name": "log"
    }
  ]
}
