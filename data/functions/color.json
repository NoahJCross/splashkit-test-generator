{
  "functions": [
    {
      "signature": "int alpha_of(color c);",
      "name": "alpha_of",
      "method_name": null,
      "unique_global_name": "alpha_of",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns the alpha of the supplied color.",
      "brief": null,
      "return": {
        "type": "int",
        "description": "The alpha component of the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "int alpha_of(color c)"
        ],
        "rust": [
          "pub fn alpha_of(c: color) -> i32"
        ],
        "python": [
          "def alpha_of(c):"
        ],
        "pascal": [
          "function AlphaOf(c: Color): Integer"
        ],
        "csharp": [
          "public static int SplashKit.AlphaOf(Color c);"
        ]
      }
    },
    {
      "signature": "int blue_of(color c);",
      "name": "blue_of",
      "method_name": null,
      "unique_global_name": "blue_of",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns the blue of the supplied color.",
      "brief": null,
      "return": {
        "type": "int",
        "description": "The blue component of the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "int blue_of(color c)"
        ],
        "rust": [
          "pub fn blue_of(c: color) -> i32"
        ],
        "python": [
          "def blue_of(c):"
        ],
        "pascal": [
          "function BlueOf(c: Color): Integer"
        ],
        "csharp": [
          "public static int SplashKit.BlueOf(Color c);"
        ]
      }
    },
    {
      "signature": "double brightness_of(color c);",
      "name": "brightness_of",
      "method_name": null,
      "unique_global_name": "brightness_of",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns the brightness of the supplied color.",
      "brief": null,
      "return": {
        "type": "double",
        "description": "The brightness component of the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "double brightness_of(color c)"
        ],
        "rust": [
          "pub fn brightness_of(c: color) -> f64"
        ],
        "python": [
          "def brightness_of(c):"
        ],
        "pascal": [
          "function BrightnessOf(c: Color): Double"
        ],
        "csharp": [
          "public static double SplashKit.BrightnessOf(Color c);"
        ]
      }
    },
    {
      "signature": "color color_alice_blue();",
      "name": "color_alice_blue",
      "method_name": null,
      "unique_global_name": "color_alice_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `alice_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `alice_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "alice_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_ALICE_BLUE",
          "color color_alice_blue()"
        ],
        "rust": [
          "pub fn color_alice_blue() -> color"
        ],
        "python": [
          "def color_alice_blue():"
        ],
        "pascal": [
          "function ColorAliceBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.AliceBlue { get }",
          "public static Color SplashKit.ColorAliceBlue();"
        ]
      }
    },
    {
      "signature": "color color_antique_white();",
      "name": "color_antique_white",
      "method_name": null,
      "unique_global_name": "color_antique_white",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `antique_white`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `antique_white`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "antique_white",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_ANTIQUE_WHITE",
          "color color_antique_white()"
        ],
        "rust": [
          "pub fn color_antique_white() -> color"
        ],
        "python": [
          "def color_antique_white():"
        ],
        "pascal": [
          "function ColorAntiqueWhite(): Color"
        ],
        "csharp": [
          "public static Color Color.AntiqueWhite { get }",
          "public static Color SplashKit.ColorAntiqueWhite();"
        ]
      }
    },
    {
      "signature": "color color_aqua();",
      "name": "color_aqua",
      "method_name": null,
      "unique_global_name": "color_aqua",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `aqua`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `aqua`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "aqua",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_AQUA",
          "color color_aqua()"
        ],
        "rust": [
          "pub fn color_aqua() -> color"
        ],
        "python": [
          "def color_aqua():"
        ],
        "pascal": [
          "function ColorAqua(): Color"
        ],
        "csharp": [
          "public static Color Color.Aqua { get }",
          "public static Color SplashKit.ColorAqua();"
        ]
      }
    },
    {
      "signature": "color color_aquamarine();",
      "name": "color_aquamarine",
      "method_name": null,
      "unique_global_name": "color_aquamarine",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `aquamarine`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `aquamarine`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "aquamarine",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_AQUAMARINE",
          "color color_aquamarine()"
        ],
        "rust": [
          "pub fn color_aquamarine() -> color"
        ],
        "python": [
          "def color_aquamarine():"
        ],
        "pascal": [
          "function ColorAquamarine(): Color"
        ],
        "csharp": [
          "public static Color Color.Aquamarine { get }",
          "public static Color SplashKit.ColorAquamarine();"
        ]
      }
    },
    {
      "signature": "color color_azure();",
      "name": "color_azure",
      "method_name": null,
      "unique_global_name": "color_azure",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `azure`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `azure`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "azure",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_AZURE",
          "color color_azure()"
        ],
        "rust": [
          "pub fn color_azure() -> color"
        ],
        "python": [
          "def color_azure():"
        ],
        "pascal": [
          "function ColorAzure(): Color"
        ],
        "csharp": [
          "public static Color Color.Azure { get }",
          "public static Color SplashKit.ColorAzure();"
        ]
      }
    },
    {
      "signature": "color color_beige();",
      "name": "color_beige",
      "method_name": null,
      "unique_global_name": "color_beige",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `beige`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `beige`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "beige",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BEIGE",
          "color color_beige()"
        ],
        "rust": [
          "pub fn color_beige() -> color"
        ],
        "python": [
          "def color_beige():"
        ],
        "pascal": [
          "function ColorBeige(): Color"
        ],
        "csharp": [
          "public static Color Color.Beige { get }",
          "public static Color SplashKit.ColorBeige();"
        ]
      }
    },
    {
      "signature": "color color_bisque();",
      "name": "color_bisque",
      "method_name": null,
      "unique_global_name": "color_bisque",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `bisque`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `bisque`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "bisque",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BISQUE",
          "color color_bisque()"
        ],
        "rust": [
          "pub fn color_bisque() -> color"
        ],
        "python": [
          "def color_bisque():"
        ],
        "pascal": [
          "function ColorBisque(): Color"
        ],
        "csharp": [
          "public static Color Color.Bisque { get }",
          "public static Color SplashKit.ColorBisque();"
        ]
      }
    },
    {
      "signature": "color color_black();",
      "name": "color_black",
      "method_name": null,
      "unique_global_name": "color_black",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `black`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `black`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "black",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BLACK",
          "color color_black()"
        ],
        "rust": [
          "pub fn color_black() -> color"
        ],
        "python": [
          "def color_black():"
        ],
        "pascal": [
          "function ColorBlack(): Color"
        ],
        "csharp": [
          "public static Color Color.Black { get }",
          "public static Color SplashKit.ColorBlack();"
        ]
      }
    },
    {
      "signature": "color color_blanched_almond();",
      "name": "color_blanched_almond",
      "method_name": null,
      "unique_global_name": "color_blanched_almond",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `blanched_almond`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `blanched_almond`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "blanched_almond",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BLANCHED_ALMOND",
          "color color_blanched_almond()"
        ],
        "rust": [
          "pub fn color_blanched_almond() -> color"
        ],
        "python": [
          "def color_blanched_almond():"
        ],
        "pascal": [
          "function ColorBlanchedAlmond(): Color"
        ],
        "csharp": [
          "public static Color Color.BlanchedAlmond { get }",
          "public static Color SplashKit.ColorBlanchedAlmond();"
        ]
      }
    },
    {
      "signature": "color color_blue();",
      "name": "color_blue",
      "method_name": null,
      "unique_global_name": "color_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BLUE",
          "color color_blue()"
        ],
        "rust": [
          "pub fn color_blue() -> color"
        ],
        "python": [
          "def color_blue():"
        ],
        "pascal": [
          "function ColorBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.Blue { get }",
          "public static Color SplashKit.ColorBlue();"
        ]
      }
    },
    {
      "signature": "color color_blue_violet();",
      "name": "color_blue_violet",
      "method_name": null,
      "unique_global_name": "color_blue_violet",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `blue_violet`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `blue_violet`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "blue_violet",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BLUE_VIOLET",
          "color color_blue_violet()"
        ],
        "rust": [
          "pub fn color_blue_violet() -> color"
        ],
        "python": [
          "def color_blue_violet():"
        ],
        "pascal": [
          "function ColorBlueViolet(): Color"
        ],
        "csharp": [
          "public static Color Color.BlueViolet { get }",
          "public static Color SplashKit.ColorBlueViolet();"
        ]
      }
    },
    {
      "signature": "color color_bright_green();",
      "name": "color_bright_green",
      "method_name": null,
      "unique_global_name": "color_bright_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `bright_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `bright_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "bright_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BRIGHT_GREEN",
          "color color_bright_green()"
        ],
        "rust": [
          "pub fn color_bright_green() -> color"
        ],
        "python": [
          "def color_bright_green():"
        ],
        "pascal": [
          "function ColorBrightGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.BrightGreen { get }",
          "public static Color SplashKit.ColorBrightGreen();"
        ]
      }
    },
    {
      "signature": "color color_brown();",
      "name": "color_brown",
      "method_name": null,
      "unique_global_name": "color_brown",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `brown`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `brown`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "brown",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BROWN",
          "color color_brown()"
        ],
        "rust": [
          "pub fn color_brown() -> color"
        ],
        "python": [
          "def color_brown():"
        ],
        "pascal": [
          "function ColorBrown(): Color"
        ],
        "csharp": [
          "public static Color Color.Brown { get }",
          "public static Color SplashKit.ColorBrown();"
        ]
      }
    },
    {
      "signature": "color color_burly_wood();",
      "name": "color_burly_wood",
      "method_name": null,
      "unique_global_name": "color_burly_wood",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `burly_wood`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `burly_wood`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "burly_wood",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_BURLY_WOOD",
          "color color_burly_wood()"
        ],
        "rust": [
          "pub fn color_burly_wood() -> color"
        ],
        "python": [
          "def color_burly_wood():"
        ],
        "pascal": [
          "function ColorBurlyWood(): Color"
        ],
        "csharp": [
          "public static Color Color.BurlyWood { get }",
          "public static Color SplashKit.ColorBurlyWood();"
        ]
      }
    },
    {
      "signature": "color color_cadet_blue();",
      "name": "color_cadet_blue",
      "method_name": null,
      "unique_global_name": "color_cadet_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `cadet_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `cadet_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "cadet_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CADET_BLUE",
          "color color_cadet_blue()"
        ],
        "rust": [
          "pub fn color_cadet_blue() -> color"
        ],
        "python": [
          "def color_cadet_blue():"
        ],
        "pascal": [
          "function ColorCadetBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.CadetBlue { get }",
          "public static Color SplashKit.ColorCadetBlue();"
        ]
      }
    },
    {
      "signature": "color color_chartreuse();",
      "name": "color_chartreuse",
      "method_name": null,
      "unique_global_name": "color_chartreuse",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `chartreuse`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `chartreuse`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "chartreuse",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CHARTREUSE",
          "color color_chartreuse()"
        ],
        "rust": [
          "pub fn color_chartreuse() -> color"
        ],
        "python": [
          "def color_chartreuse():"
        ],
        "pascal": [
          "function ColorChartreuse(): Color"
        ],
        "csharp": [
          "public static Color Color.Chartreuse { get }",
          "public static Color SplashKit.ColorChartreuse();"
        ]
      }
    },
    {
      "signature": "color color_chocolate();",
      "name": "color_chocolate",
      "method_name": null,
      "unique_global_name": "color_chocolate",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `chocolate`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `chocolate`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "chocolate",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CHOCOLATE",
          "color color_chocolate()"
        ],
        "rust": [
          "pub fn color_chocolate() -> color"
        ],
        "python": [
          "def color_chocolate():"
        ],
        "pascal": [
          "function ColorChocolate(): Color"
        ],
        "csharp": [
          "public static Color Color.Chocolate { get }",
          "public static Color SplashKit.ColorChocolate();"
        ]
      }
    },
    {
      "signature": "color color_coral();",
      "name": "color_coral",
      "method_name": null,
      "unique_global_name": "color_coral",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `coral`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `coral`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "coral",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CORAL",
          "color color_coral()"
        ],
        "rust": [
          "pub fn color_coral() -> color"
        ],
        "python": [
          "def color_coral():"
        ],
        "pascal": [
          "function ColorCoral(): Color"
        ],
        "csharp": [
          "public static Color Color.Coral { get }",
          "public static Color SplashKit.ColorCoral();"
        ]
      }
    },
    {
      "signature": "color color_cornflower_blue();",
      "name": "color_cornflower_blue",
      "method_name": null,
      "unique_global_name": "color_cornflower_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `cornflower_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `cornflower_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "cornflower_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CORNFLOWER_BLUE",
          "color color_cornflower_blue()"
        ],
        "rust": [
          "pub fn color_cornflower_blue() -> color"
        ],
        "python": [
          "def color_cornflower_blue():"
        ],
        "pascal": [
          "function ColorCornflowerBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.CornflowerBlue { get }",
          "public static Color SplashKit.ColorCornflowerBlue();"
        ]
      }
    },
    {
      "signature": "color color_cornsilk();",
      "name": "color_cornsilk",
      "method_name": null,
      "unique_global_name": "color_cornsilk",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `cornsilk`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `cornsilk`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "cornsilk",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CORNSILK",
          "color color_cornsilk()"
        ],
        "rust": [
          "pub fn color_cornsilk() -> color"
        ],
        "python": [
          "def color_cornsilk():"
        ],
        "pascal": [
          "function ColorCornsilk(): Color"
        ],
        "csharp": [
          "public static Color Color.Cornsilk { get }",
          "public static Color SplashKit.ColorCornsilk();"
        ]
      }
    },
    {
      "signature": "color color_crimson();",
      "name": "color_crimson",
      "method_name": null,
      "unique_global_name": "color_crimson",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `crimson`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `crimson`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "crimson",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CRIMSON",
          "color color_crimson()"
        ],
        "rust": [
          "pub fn color_crimson() -> color"
        ],
        "python": [
          "def color_crimson():"
        ],
        "pascal": [
          "function ColorCrimson(): Color"
        ],
        "csharp": [
          "public static Color Color.Crimson { get }",
          "public static Color SplashKit.ColorCrimson();"
        ]
      }
    },
    {
      "signature": "color color_cyan();",
      "name": "color_cyan",
      "method_name": null,
      "unique_global_name": "color_cyan",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `cyan`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `cyan`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "cyan",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_CYAN",
          "color color_cyan()"
        ],
        "rust": [
          "pub fn color_cyan() -> color"
        ],
        "python": [
          "def color_cyan():"
        ],
        "pascal": [
          "function ColorCyan(): Color"
        ],
        "csharp": [
          "public static Color Color.Cyan { get }",
          "public static Color SplashKit.ColorCyan();"
        ]
      }
    },
    {
      "signature": "color color_dark_blue();",
      "name": "color_dark_blue",
      "method_name": null,
      "unique_global_name": "color_dark_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_BLUE",
          "color color_dark_blue()"
        ],
        "rust": [
          "pub fn color_dark_blue() -> color"
        ],
        "python": [
          "def color_dark_blue():"
        ],
        "pascal": [
          "function ColorDarkBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkBlue { get }",
          "public static Color SplashKit.ColorDarkBlue();"
        ]
      }
    },
    {
      "signature": "color color_dark_cyan();",
      "name": "color_dark_cyan",
      "method_name": null,
      "unique_global_name": "color_dark_cyan",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_cyan`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_cyan`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_cyan",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_CYAN",
          "color color_dark_cyan()"
        ],
        "rust": [
          "pub fn color_dark_cyan() -> color"
        ],
        "python": [
          "def color_dark_cyan():"
        ],
        "pascal": [
          "function ColorDarkCyan(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkCyan { get }",
          "public static Color SplashKit.ColorDarkCyan();"
        ]
      }
    },
    {
      "signature": "color color_dark_goldenrod();",
      "name": "color_dark_goldenrod",
      "method_name": null,
      "unique_global_name": "color_dark_goldenrod",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_goldenrod`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_goldenrod`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_goldenrod",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_GOLDENROD",
          "color color_dark_goldenrod()"
        ],
        "rust": [
          "pub fn color_dark_goldenrod() -> color"
        ],
        "python": [
          "def color_dark_goldenrod():"
        ],
        "pascal": [
          "function ColorDarkGoldenrod(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkGoldenrod { get }",
          "public static Color SplashKit.ColorDarkGoldenrod();"
        ]
      }
    },
    {
      "signature": "color color_dark_gray();",
      "name": "color_dark_gray",
      "method_name": null,
      "unique_global_name": "color_dark_gray",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_gray`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_gray`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_gray",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_GRAY",
          "color color_dark_gray()"
        ],
        "rust": [
          "pub fn color_dark_gray() -> color"
        ],
        "python": [
          "def color_dark_gray():"
        ],
        "pascal": [
          "function ColorDarkGray(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkGray { get }",
          "public static Color SplashKit.ColorDarkGray();"
        ]
      }
    },
    {
      "signature": "color color_dark_green();",
      "name": "color_dark_green",
      "method_name": null,
      "unique_global_name": "color_dark_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_GREEN",
          "color color_dark_green()"
        ],
        "rust": [
          "pub fn color_dark_green() -> color"
        ],
        "python": [
          "def color_dark_green():"
        ],
        "pascal": [
          "function ColorDarkGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkGreen { get }",
          "public static Color SplashKit.ColorDarkGreen();"
        ]
      }
    },
    {
      "signature": "color color_dark_khaki();",
      "name": "color_dark_khaki",
      "method_name": null,
      "unique_global_name": "color_dark_khaki",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_khaki`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_khaki`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_khaki",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_KHAKI",
          "color color_dark_khaki()"
        ],
        "rust": [
          "pub fn color_dark_khaki() -> color"
        ],
        "python": [
          "def color_dark_khaki():"
        ],
        "pascal": [
          "function ColorDarkKhaki(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkKhaki { get }",
          "public static Color SplashKit.ColorDarkKhaki();"
        ]
      }
    },
    {
      "signature": "color color_dark_magenta();",
      "name": "color_dark_magenta",
      "method_name": null,
      "unique_global_name": "color_dark_magenta",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_magenta`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_magenta`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_magenta",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_MAGENTA",
          "color color_dark_magenta()"
        ],
        "rust": [
          "pub fn color_dark_magenta() -> color"
        ],
        "python": [
          "def color_dark_magenta():"
        ],
        "pascal": [
          "function ColorDarkMagenta(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkMagenta { get }",
          "public static Color SplashKit.ColorDarkMagenta();"
        ]
      }
    },
    {
      "signature": "color color_dark_olive_green();",
      "name": "color_dark_olive_green",
      "method_name": null,
      "unique_global_name": "color_dark_olive_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_olive_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_olive_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_olive_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_OLIVE_GREEN",
          "color color_dark_olive_green()"
        ],
        "rust": [
          "pub fn color_dark_olive_green() -> color"
        ],
        "python": [
          "def color_dark_olive_green():"
        ],
        "pascal": [
          "function ColorDarkOliveGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkOliveGreen { get }",
          "public static Color SplashKit.ColorDarkOliveGreen();"
        ]
      }
    },
    {
      "signature": "color color_dark_orange();",
      "name": "color_dark_orange",
      "method_name": null,
      "unique_global_name": "color_dark_orange",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_orange`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_orange`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_orange",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_ORANGE",
          "color color_dark_orange()"
        ],
        "rust": [
          "pub fn color_dark_orange() -> color"
        ],
        "python": [
          "def color_dark_orange():"
        ],
        "pascal": [
          "function ColorDarkOrange(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkOrange { get }",
          "public static Color SplashKit.ColorDarkOrange();"
        ]
      }
    },
    {
      "signature": "color color_dark_orchid();",
      "name": "color_dark_orchid",
      "method_name": null,
      "unique_global_name": "color_dark_orchid",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_orchid`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_orchid`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_orchid",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_ORCHID",
          "color color_dark_orchid()"
        ],
        "rust": [
          "pub fn color_dark_orchid() -> color"
        ],
        "python": [
          "def color_dark_orchid():"
        ],
        "pascal": [
          "function ColorDarkOrchid(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkOrchid { get }",
          "public static Color SplashKit.ColorDarkOrchid();"
        ]
      }
    },
    {
      "signature": "color color_dark_red();",
      "name": "color_dark_red",
      "method_name": null,
      "unique_global_name": "color_dark_red",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_red`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_red`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_red",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_RED",
          "color color_dark_red()"
        ],
        "rust": [
          "pub fn color_dark_red() -> color"
        ],
        "python": [
          "def color_dark_red():"
        ],
        "pascal": [
          "function ColorDarkRed(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkRed { get }",
          "public static Color SplashKit.ColorDarkRed();"
        ]
      }
    },
    {
      "signature": "color color_dark_salmon();",
      "name": "color_dark_salmon",
      "method_name": null,
      "unique_global_name": "color_dark_salmon",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_salmon`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_salmon`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_salmon",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_SALMON",
          "color color_dark_salmon()"
        ],
        "rust": [
          "pub fn color_dark_salmon() -> color"
        ],
        "python": [
          "def color_dark_salmon():"
        ],
        "pascal": [
          "function ColorDarkSalmon(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkSalmon { get }",
          "public static Color SplashKit.ColorDarkSalmon();"
        ]
      }
    },
    {
      "signature": "color color_dark_sea_green();",
      "name": "color_dark_sea_green",
      "method_name": null,
      "unique_global_name": "color_dark_sea_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_sea_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_sea_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_sea_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_SEA_GREEN",
          "color color_dark_sea_green()"
        ],
        "rust": [
          "pub fn color_dark_sea_green() -> color"
        ],
        "python": [
          "def color_dark_sea_green():"
        ],
        "pascal": [
          "function ColorDarkSeaGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkSeaGreen { get }",
          "public static Color SplashKit.ColorDarkSeaGreen();"
        ]
      }
    },
    {
      "signature": "color color_dark_slate_blue();",
      "name": "color_dark_slate_blue",
      "method_name": null,
      "unique_global_name": "color_dark_slate_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_slate_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_slate_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_slate_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_SLATE_BLUE",
          "color color_dark_slate_blue()"
        ],
        "rust": [
          "pub fn color_dark_slate_blue() -> color"
        ],
        "python": [
          "def color_dark_slate_blue():"
        ],
        "pascal": [
          "function ColorDarkSlateBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkSlateBlue { get }",
          "public static Color SplashKit.ColorDarkSlateBlue();"
        ]
      }
    },
    {
      "signature": "color color_dark_slate_gray();",
      "name": "color_dark_slate_gray",
      "method_name": null,
      "unique_global_name": "color_dark_slate_gray",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_slate_gray`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_slate_gray`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_slate_gray",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_SLATE_GRAY",
          "color color_dark_slate_gray()"
        ],
        "rust": [
          "pub fn color_dark_slate_gray() -> color"
        ],
        "python": [
          "def color_dark_slate_gray():"
        ],
        "pascal": [
          "function ColorDarkSlateGray(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkSlateGray { get }",
          "public static Color SplashKit.ColorDarkSlateGray();"
        ]
      }
    },
    {
      "signature": "color color_dark_turquoise();",
      "name": "color_dark_turquoise",
      "method_name": null,
      "unique_global_name": "color_dark_turquoise",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_turquoise`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_turquoise`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_turquoise",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_TURQUOISE",
          "color color_dark_turquoise()"
        ],
        "rust": [
          "pub fn color_dark_turquoise() -> color"
        ],
        "python": [
          "def color_dark_turquoise():"
        ],
        "pascal": [
          "function ColorDarkTurquoise(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkTurquoise { get }",
          "public static Color SplashKit.ColorDarkTurquoise();"
        ]
      }
    },
    {
      "signature": "color color_dark_violet();",
      "name": "color_dark_violet",
      "method_name": null,
      "unique_global_name": "color_dark_violet",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dark_violet`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dark_violet`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dark_violet",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DARK_VIOLET",
          "color color_dark_violet()"
        ],
        "rust": [
          "pub fn color_dark_violet() -> color"
        ],
        "python": [
          "def color_dark_violet():"
        ],
        "pascal": [
          "function ColorDarkViolet(): Color"
        ],
        "csharp": [
          "public static Color Color.DarkViolet { get }",
          "public static Color SplashKit.ColorDarkViolet();"
        ]
      }
    },
    {
      "signature": "color color_deep_pink();",
      "name": "color_deep_pink",
      "method_name": null,
      "unique_global_name": "color_deep_pink",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `deep_pink`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `deep_pink`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "deep_pink",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DEEP_PINK",
          "color color_deep_pink()"
        ],
        "rust": [
          "pub fn color_deep_pink() -> color"
        ],
        "python": [
          "def color_deep_pink():"
        ],
        "pascal": [
          "function ColorDeepPink(): Color"
        ],
        "csharp": [
          "public static Color Color.DeepPink { get }",
          "public static Color SplashKit.ColorDeepPink();"
        ]
      }
    },
    {
      "signature": "color color_deep_sky_blue();",
      "name": "color_deep_sky_blue",
      "method_name": null,
      "unique_global_name": "color_deep_sky_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `deep_sky_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `deep_sky_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "deep_sky_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DEEP_SKY_BLUE",
          "color color_deep_sky_blue()"
        ],
        "rust": [
          "pub fn color_deep_sky_blue() -> color"
        ],
        "python": [
          "def color_deep_sky_blue():"
        ],
        "pascal": [
          "function ColorDeepSkyBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.DeepSkyBlue { get }",
          "public static Color SplashKit.ColorDeepSkyBlue();"
        ]
      }
    },
    {
      "signature": "color color_dim_gray();",
      "name": "color_dim_gray",
      "method_name": null,
      "unique_global_name": "color_dim_gray",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dim_gray`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dim_gray`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dim_gray",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DIM_GRAY",
          "color color_dim_gray()"
        ],
        "rust": [
          "pub fn color_dim_gray() -> color"
        ],
        "python": [
          "def color_dim_gray():"
        ],
        "pascal": [
          "function ColorDimGray(): Color"
        ],
        "csharp": [
          "public static Color Color.DimGray { get }",
          "public static Color SplashKit.ColorDimGray();"
        ]
      }
    },
    {
      "signature": "color color_dodger_blue();",
      "name": "color_dodger_blue",
      "method_name": null,
      "unique_global_name": "color_dodger_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `dodger_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `dodger_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "dodger_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_DODGER_BLUE",
          "color color_dodger_blue()"
        ],
        "rust": [
          "pub fn color_dodger_blue() -> color"
        ],
        "python": [
          "def color_dodger_blue():"
        ],
        "pascal": [
          "function ColorDodgerBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.DodgerBlue { get }",
          "public static Color SplashKit.ColorDodgerBlue();"
        ]
      }
    },
    {
      "signature": "color color_firebrick();",
      "name": "color_firebrick",
      "method_name": null,
      "unique_global_name": "color_firebrick",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `firebrick`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `firebrick`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "firebrick",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_FIREBRICK",
          "color color_firebrick()"
        ],
        "rust": [
          "pub fn color_firebrick() -> color"
        ],
        "python": [
          "def color_firebrick():"
        ],
        "pascal": [
          "function ColorFirebrick(): Color"
        ],
        "csharp": [
          "public static Color Color.Firebrick { get }",
          "public static Color SplashKit.ColorFirebrick();"
        ]
      }
    },
    {
      "signature": "color color_floral_white();",
      "name": "color_floral_white",
      "method_name": null,
      "unique_global_name": "color_floral_white",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `floral_white`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `floral_white`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "floral_white",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_FLORAL_WHITE",
          "color color_floral_white()"
        ],
        "rust": [
          "pub fn color_floral_white() -> color"
        ],
        "python": [
          "def color_floral_white():"
        ],
        "pascal": [
          "function ColorFloralWhite(): Color"
        ],
        "csharp": [
          "public static Color Color.FloralWhite { get }",
          "public static Color SplashKit.ColorFloralWhite();"
        ]
      }
    },
    {
      "signature": "color color_forest_green();",
      "name": "color_forest_green",
      "method_name": null,
      "unique_global_name": "color_forest_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `forest_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `forest_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "forest_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_FOREST_GREEN",
          "color color_forest_green()"
        ],
        "rust": [
          "pub fn color_forest_green() -> color"
        ],
        "python": [
          "def color_forest_green():"
        ],
        "pascal": [
          "function ColorForestGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.ForestGreen { get }",
          "public static Color SplashKit.ColorForestGreen();"
        ]
      }
    },
    {
      "signature": "color color_fuchsia();",
      "name": "color_fuchsia",
      "method_name": null,
      "unique_global_name": "color_fuchsia",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `fuchsia`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `fuchsia`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "fuchsia",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_FUCHSIA",
          "color color_fuchsia()"
        ],
        "rust": [
          "pub fn color_fuchsia() -> color"
        ],
        "python": [
          "def color_fuchsia():"
        ],
        "pascal": [
          "function ColorFuchsia(): Color"
        ],
        "csharp": [
          "public static Color Color.Fuchsia { get }",
          "public static Color SplashKit.ColorFuchsia();"
        ]
      }
    },
    {
      "signature": "color color_gainsboro();",
      "name": "color_gainsboro",
      "method_name": null,
      "unique_global_name": "color_gainsboro",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `gainsboro`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `gainsboro`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "gainsboro",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_GAINSBORO",
          "color color_gainsboro()"
        ],
        "rust": [
          "pub fn color_gainsboro() -> color"
        ],
        "python": [
          "def color_gainsboro():"
        ],
        "pascal": [
          "function ColorGainsboro(): Color"
        ],
        "csharp": [
          "public static Color Color.Gainsboro { get }",
          "public static Color SplashKit.ColorGainsboro();"
        ]
      }
    },
    {
      "signature": "color color_ghost_white();",
      "name": "color_ghost_white",
      "method_name": null,
      "unique_global_name": "color_ghost_white",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `ghost_white`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `ghost_white`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "ghost_white",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_GHOST_WHITE",
          "color color_ghost_white()"
        ],
        "rust": [
          "pub fn color_ghost_white() -> color"
        ],
        "python": [
          "def color_ghost_white():"
        ],
        "pascal": [
          "function ColorGhostWhite(): Color"
        ],
        "csharp": [
          "public static Color Color.GhostWhite { get }",
          "public static Color SplashKit.ColorGhostWhite();"
        ]
      }
    },
    {
      "signature": "color color_gold();",
      "name": "color_gold",
      "method_name": null,
      "unique_global_name": "color_gold",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `gold`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `gold`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "gold",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_GOLD",
          "color color_gold()"
        ],
        "rust": [
          "pub fn color_gold() -> color"
        ],
        "python": [
          "def color_gold():"
        ],
        "pascal": [
          "function ColorGold(): Color"
        ],
        "csharp": [
          "public static Color Color.Gold { get }",
          "public static Color SplashKit.ColorGold();"
        ]
      }
    },
    {
      "signature": "color color_goldenrod();",
      "name": "color_goldenrod",
      "method_name": null,
      "unique_global_name": "color_goldenrod",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `goldenrod`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `goldenrod`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "goldenrod",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_GOLDENROD",
          "color color_goldenrod()"
        ],
        "rust": [
          "pub fn color_goldenrod() -> color"
        ],
        "python": [
          "def color_goldenrod():"
        ],
        "pascal": [
          "function ColorGoldenrod(): Color"
        ],
        "csharp": [
          "public static Color Color.Goldenrod { get }",
          "public static Color SplashKit.ColorGoldenrod();"
        ]
      }
    },
    {
      "signature": "color color_gray();",
      "name": "color_gray",
      "method_name": null,
      "unique_global_name": "color_gray",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `gray`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `gray`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "gray",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_GRAY",
          "color color_gray()"
        ],
        "rust": [
          "pub fn color_gray() -> color"
        ],
        "python": [
          "def color_gray():"
        ],
        "pascal": [
          "function ColorGray(): Color"
        ],
        "csharp": [
          "public static Color Color.Gray { get }",
          "public static Color SplashKit.ColorGray();"
        ]
      }
    },
    {
      "signature": "color color_green();",
      "name": "color_green",
      "method_name": null,
      "unique_global_name": "color_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_GREEN",
          "color color_green()"
        ],
        "rust": [
          "pub fn color_green() -> color"
        ],
        "python": [
          "def color_green():"
        ],
        "pascal": [
          "function ColorGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.Green { get }",
          "public static Color SplashKit.ColorGreen();"
        ]
      }
    },
    {
      "signature": "color color_green_yellow();",
      "name": "color_green_yellow",
      "method_name": null,
      "unique_global_name": "color_green_yellow",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `green_yellow`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `green_yellow`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "green_yellow",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_GREEN_YELLOW",
          "color color_green_yellow()"
        ],
        "rust": [
          "pub fn color_green_yellow() -> color"
        ],
        "python": [
          "def color_green_yellow():"
        ],
        "pascal": [
          "function ColorGreenYellow(): Color"
        ],
        "csharp": [
          "public static Color Color.GreenYellow { get }",
          "public static Color SplashKit.ColorGreenYellow();"
        ]
      }
    },
    {
      "signature": "color color_honeydew();",
      "name": "color_honeydew",
      "method_name": null,
      "unique_global_name": "color_honeydew",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `honeydew`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `honeydew`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "honeydew",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_HONEYDEW",
          "color color_honeydew()"
        ],
        "rust": [
          "pub fn color_honeydew() -> color"
        ],
        "python": [
          "def color_honeydew():"
        ],
        "pascal": [
          "function ColorHoneydew(): Color"
        ],
        "csharp": [
          "public static Color Color.Honeydew { get }",
          "public static Color SplashKit.ColorHoneydew();"
        ]
      }
    },
    {
      "signature": "color color_hot_pink();",
      "name": "color_hot_pink",
      "method_name": null,
      "unique_global_name": "color_hot_pink",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `hot_pink`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `hot_pink`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "hot_pink",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_HOT_PINK",
          "color color_hot_pink()"
        ],
        "rust": [
          "pub fn color_hot_pink() -> color"
        ],
        "python": [
          "def color_hot_pink():"
        ],
        "pascal": [
          "function ColorHotPink(): Color"
        ],
        "csharp": [
          "public static Color Color.HotPink { get }",
          "public static Color SplashKit.ColorHotPink();"
        ]
      }
    },
    {
      "signature": "color color_indian_red();",
      "name": "color_indian_red",
      "method_name": null,
      "unique_global_name": "color_indian_red",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `indian_red`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `indian_red`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "indian_red",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_INDIAN_RED",
          "color color_indian_red()"
        ],
        "rust": [
          "pub fn color_indian_red() -> color"
        ],
        "python": [
          "def color_indian_red():"
        ],
        "pascal": [
          "function ColorIndianRed(): Color"
        ],
        "csharp": [
          "public static Color Color.IndianRed { get }",
          "public static Color SplashKit.ColorIndianRed();"
        ]
      }
    },
    {
      "signature": "color color_indigo();",
      "name": "color_indigo",
      "method_name": null,
      "unique_global_name": "color_indigo",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `indigo`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `indigo`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "indigo",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_INDIGO",
          "color color_indigo()"
        ],
        "rust": [
          "pub fn color_indigo() -> color"
        ],
        "python": [
          "def color_indigo():"
        ],
        "pascal": [
          "function ColorIndigo(): Color"
        ],
        "csharp": [
          "public static Color Color.Indigo { get }",
          "public static Color SplashKit.ColorIndigo();"
        ]
      }
    },
    {
      "signature": "color color_ivory();",
      "name": "color_ivory",
      "method_name": null,
      "unique_global_name": "color_ivory",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `ivory`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `ivory`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "ivory",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_IVORY",
          "color color_ivory()"
        ],
        "rust": [
          "pub fn color_ivory() -> color"
        ],
        "python": [
          "def color_ivory():"
        ],
        "pascal": [
          "function ColorIvory(): Color"
        ],
        "csharp": [
          "public static Color Color.Ivory { get }",
          "public static Color SplashKit.ColorIvory();"
        ]
      }
    },
    {
      "signature": "color color_khaki();",
      "name": "color_khaki",
      "method_name": null,
      "unique_global_name": "color_khaki",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `khaki`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `khaki`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "khaki",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_KHAKI",
          "color color_khaki()"
        ],
        "rust": [
          "pub fn color_khaki() -> color"
        ],
        "python": [
          "def color_khaki():"
        ],
        "pascal": [
          "function ColorKhaki(): Color"
        ],
        "csharp": [
          "public static Color Color.Khaki { get }",
          "public static Color SplashKit.ColorKhaki();"
        ]
      }
    },
    {
      "signature": "color color_lavender();",
      "name": "color_lavender",
      "method_name": null,
      "unique_global_name": "color_lavender",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `lavender`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `lavender`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "lavender",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LAVENDER",
          "color color_lavender()"
        ],
        "rust": [
          "pub fn color_lavender() -> color"
        ],
        "python": [
          "def color_lavender():"
        ],
        "pascal": [
          "function ColorLavender(): Color"
        ],
        "csharp": [
          "public static Color Color.Lavender { get }",
          "public static Color SplashKit.ColorLavender();"
        ]
      }
    },
    {
      "signature": "color color_lavender_blush();",
      "name": "color_lavender_blush",
      "method_name": null,
      "unique_global_name": "color_lavender_blush",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `lavender_blush`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `lavender_blush`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "lavender_blush",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LAVENDER_BLUSH",
          "color color_lavender_blush()"
        ],
        "rust": [
          "pub fn color_lavender_blush() -> color"
        ],
        "python": [
          "def color_lavender_blush():"
        ],
        "pascal": [
          "function ColorLavenderBlush(): Color"
        ],
        "csharp": [
          "public static Color Color.LavenderBlush { get }",
          "public static Color SplashKit.ColorLavenderBlush();"
        ]
      }
    },
    {
      "signature": "color color_lawn_green();",
      "name": "color_lawn_green",
      "method_name": null,
      "unique_global_name": "color_lawn_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `lawn_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `lawn_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "lawn_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LAWN_GREEN",
          "color color_lawn_green()"
        ],
        "rust": [
          "pub fn color_lawn_green() -> color"
        ],
        "python": [
          "def color_lawn_green():"
        ],
        "pascal": [
          "function ColorLawnGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.LawnGreen { get }",
          "public static Color SplashKit.ColorLawnGreen();"
        ]
      }
    },
    {
      "signature": "color color_lemon_chiffon();",
      "name": "color_lemon_chiffon",
      "method_name": null,
      "unique_global_name": "color_lemon_chiffon",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `lemon_chiffon`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `lemon_chiffon`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "lemon_chiffon",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LEMON_CHIFFON",
          "color color_lemon_chiffon()"
        ],
        "rust": [
          "pub fn color_lemon_chiffon() -> color"
        ],
        "python": [
          "def color_lemon_chiffon():"
        ],
        "pascal": [
          "function ColorLemonChiffon(): Color"
        ],
        "csharp": [
          "public static Color Color.LemonChiffon { get }",
          "public static Color SplashKit.ColorLemonChiffon();"
        ]
      }
    },
    {
      "signature": "color color_light_blue();",
      "name": "color_light_blue",
      "method_name": null,
      "unique_global_name": "color_light_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_BLUE",
          "color color_light_blue()"
        ],
        "rust": [
          "pub fn color_light_blue() -> color"
        ],
        "python": [
          "def color_light_blue():"
        ],
        "pascal": [
          "function ColorLightBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.LightBlue { get }",
          "public static Color SplashKit.ColorLightBlue();"
        ]
      }
    },
    {
      "signature": "color color_light_coral();",
      "name": "color_light_coral",
      "method_name": null,
      "unique_global_name": "color_light_coral",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_coral`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_coral`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_coral",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_CORAL",
          "color color_light_coral()"
        ],
        "rust": [
          "pub fn color_light_coral() -> color"
        ],
        "python": [
          "def color_light_coral():"
        ],
        "pascal": [
          "function ColorLightCoral(): Color"
        ],
        "csharp": [
          "public static Color Color.LightCoral { get }",
          "public static Color SplashKit.ColorLightCoral();"
        ]
      }
    },
    {
      "signature": "color color_light_cyan();",
      "name": "color_light_cyan",
      "method_name": null,
      "unique_global_name": "color_light_cyan",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_cyan`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_cyan`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_cyan",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_CYAN",
          "color color_light_cyan()"
        ],
        "rust": [
          "pub fn color_light_cyan() -> color"
        ],
        "python": [
          "def color_light_cyan():"
        ],
        "pascal": [
          "function ColorLightCyan(): Color"
        ],
        "csharp": [
          "public static Color Color.LightCyan { get }",
          "public static Color SplashKit.ColorLightCyan();"
        ]
      }
    },
    {
      "signature": "color color_light_goldenrod_yellow();",
      "name": "color_light_goldenrod_yellow",
      "method_name": null,
      "unique_global_name": "color_light_goldenrod_yellow",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_goldenrod_yellow`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_goldenrod_yellow`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_goldenrod_yellow",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_GOLDENROD_YELLOW",
          "color color_light_goldenrod_yellow()"
        ],
        "rust": [
          "pub fn color_light_goldenrod_yellow() -> color"
        ],
        "python": [
          "def color_light_goldenrod_yellow():"
        ],
        "pascal": [
          "function ColorLightGoldenrodYellow(): Color"
        ],
        "csharp": [
          "public static Color Color.LightGoldenrodYellow { get }",
          "public static Color SplashKit.ColorLightGoldenrodYellow();"
        ]
      }
    },
    {
      "signature": "color color_light_gray();",
      "name": "color_light_gray",
      "method_name": null,
      "unique_global_name": "color_light_gray",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_gray`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_gray`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_gray",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_GRAY",
          "color color_light_gray()"
        ],
        "rust": [
          "pub fn color_light_gray() -> color"
        ],
        "python": [
          "def color_light_gray():"
        ],
        "pascal": [
          "function ColorLightGray(): Color"
        ],
        "csharp": [
          "public static Color Color.LightGray { get }",
          "public static Color SplashKit.ColorLightGray();"
        ]
      }
    },
    {
      "signature": "color color_light_green();",
      "name": "color_light_green",
      "method_name": null,
      "unique_global_name": "color_light_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_GREEN",
          "color color_light_green()"
        ],
        "rust": [
          "pub fn color_light_green() -> color"
        ],
        "python": [
          "def color_light_green():"
        ],
        "pascal": [
          "function ColorLightGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.LightGreen { get }",
          "public static Color SplashKit.ColorLightGreen();"
        ]
      }
    },
    {
      "signature": "color color_light_pink();",
      "name": "color_light_pink",
      "method_name": null,
      "unique_global_name": "color_light_pink",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_pink`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_pink`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_pink",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_PINK",
          "color color_light_pink()"
        ],
        "rust": [
          "pub fn color_light_pink() -> color"
        ],
        "python": [
          "def color_light_pink():"
        ],
        "pascal": [
          "function ColorLightPink(): Color"
        ],
        "csharp": [
          "public static Color Color.LightPink { get }",
          "public static Color SplashKit.ColorLightPink();"
        ]
      }
    },
    {
      "signature": "color color_light_salmon();",
      "name": "color_light_salmon",
      "method_name": null,
      "unique_global_name": "color_light_salmon",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_salmon`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_salmon`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_salmon",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_SALMON",
          "color color_light_salmon()"
        ],
        "rust": [
          "pub fn color_light_salmon() -> color"
        ],
        "python": [
          "def color_light_salmon():"
        ],
        "pascal": [
          "function ColorLightSalmon(): Color"
        ],
        "csharp": [
          "public static Color Color.LightSalmon { get }",
          "public static Color SplashKit.ColorLightSalmon();"
        ]
      }
    },
    {
      "signature": "color color_light_sea_green();",
      "name": "color_light_sea_green",
      "method_name": null,
      "unique_global_name": "color_light_sea_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_sea_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_sea_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_sea_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_SEA_GREEN",
          "color color_light_sea_green()"
        ],
        "rust": [
          "pub fn color_light_sea_green() -> color"
        ],
        "python": [
          "def color_light_sea_green():"
        ],
        "pascal": [
          "function ColorLightSeaGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.LightSeaGreen { get }",
          "public static Color SplashKit.ColorLightSeaGreen();"
        ]
      }
    },
    {
      "signature": "color color_light_sky_blue();",
      "name": "color_light_sky_blue",
      "method_name": null,
      "unique_global_name": "color_light_sky_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_sky_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_sky_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_sky_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_SKY_BLUE",
          "color color_light_sky_blue()"
        ],
        "rust": [
          "pub fn color_light_sky_blue() -> color"
        ],
        "python": [
          "def color_light_sky_blue():"
        ],
        "pascal": [
          "function ColorLightSkyBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.LightSkyBlue { get }",
          "public static Color SplashKit.ColorLightSkyBlue();"
        ]
      }
    },
    {
      "signature": "color color_light_slate_gray();",
      "name": "color_light_slate_gray",
      "method_name": null,
      "unique_global_name": "color_light_slate_gray",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_slate_gray`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_slate_gray`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_slate_gray",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_SLATE_GRAY",
          "color color_light_slate_gray()"
        ],
        "rust": [
          "pub fn color_light_slate_gray() -> color"
        ],
        "python": [
          "def color_light_slate_gray():"
        ],
        "pascal": [
          "function ColorLightSlateGray(): Color"
        ],
        "csharp": [
          "public static Color Color.LightSlateGray { get }",
          "public static Color SplashKit.ColorLightSlateGray();"
        ]
      }
    },
    {
      "signature": "color color_light_steel_blue();",
      "name": "color_light_steel_blue",
      "method_name": null,
      "unique_global_name": "color_light_steel_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_steel_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_steel_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_steel_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_STEEL_BLUE",
          "color color_light_steel_blue()"
        ],
        "rust": [
          "pub fn color_light_steel_blue() -> color"
        ],
        "python": [
          "def color_light_steel_blue():"
        ],
        "pascal": [
          "function ColorLightSteelBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.LightSteelBlue { get }",
          "public static Color SplashKit.ColorLightSteelBlue();"
        ]
      }
    },
    {
      "signature": "color color_light_yellow();",
      "name": "color_light_yellow",
      "method_name": null,
      "unique_global_name": "color_light_yellow",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `light_yellow`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `light_yellow`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "light_yellow",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIGHT_YELLOW",
          "color color_light_yellow()"
        ],
        "rust": [
          "pub fn color_light_yellow() -> color"
        ],
        "python": [
          "def color_light_yellow():"
        ],
        "pascal": [
          "function ColorLightYellow(): Color"
        ],
        "csharp": [
          "public static Color Color.LightYellow { get }",
          "public static Color SplashKit.ColorLightYellow();"
        ]
      }
    },
    {
      "signature": "color color_lime();",
      "name": "color_lime",
      "method_name": null,
      "unique_global_name": "color_lime",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `lime`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `lime`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "lime",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIME",
          "color color_lime()"
        ],
        "rust": [
          "pub fn color_lime() -> color"
        ],
        "python": [
          "def color_lime():"
        ],
        "pascal": [
          "function ColorLime(): Color"
        ],
        "csharp": [
          "public static Color Color.Lime { get }",
          "public static Color SplashKit.ColorLime();"
        ]
      }
    },
    {
      "signature": "color color_lime_green();",
      "name": "color_lime_green",
      "method_name": null,
      "unique_global_name": "color_lime_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `lime_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `lime_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "lime_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LIME_GREEN",
          "color color_lime_green()"
        ],
        "rust": [
          "pub fn color_lime_green() -> color"
        ],
        "python": [
          "def color_lime_green():"
        ],
        "pascal": [
          "function ColorLimeGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.LimeGreen { get }",
          "public static Color SplashKit.ColorLimeGreen();"
        ]
      }
    },
    {
      "signature": "color color_linen();",
      "name": "color_linen",
      "method_name": null,
      "unique_global_name": "color_linen",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `linen`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `linen`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "linen",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_LINEN",
          "color color_linen()"
        ],
        "rust": [
          "pub fn color_linen() -> color"
        ],
        "python": [
          "def color_linen():"
        ],
        "pascal": [
          "function ColorLinen(): Color"
        ],
        "csharp": [
          "public static Color Color.Linen { get }",
          "public static Color SplashKit.ColorLinen();"
        ]
      }
    },
    {
      "signature": "color color_magenta();",
      "name": "color_magenta",
      "method_name": null,
      "unique_global_name": "color_magenta",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `magenta`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `magenta`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "magenta",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MAGENTA",
          "color color_magenta()"
        ],
        "rust": [
          "pub fn color_magenta() -> color"
        ],
        "python": [
          "def color_magenta():"
        ],
        "pascal": [
          "function ColorMagenta(): Color"
        ],
        "csharp": [
          "public static Color Color.Magenta { get }",
          "public static Color SplashKit.ColorMagenta();"
        ]
      }
    },
    {
      "signature": "color color_maroon();",
      "name": "color_maroon",
      "method_name": null,
      "unique_global_name": "color_maroon",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `maroon`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `maroon`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "maroon",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MAROON",
          "color color_maroon()"
        ],
        "rust": [
          "pub fn color_maroon() -> color"
        ],
        "python": [
          "def color_maroon():"
        ],
        "pascal": [
          "function ColorMaroon(): Color"
        ],
        "csharp": [
          "public static Color Color.Maroon { get }",
          "public static Color SplashKit.ColorMaroon();"
        ]
      }
    },
    {
      "signature": "color color_medium_aquamarine();",
      "name": "color_medium_aquamarine",
      "method_name": null,
      "unique_global_name": "color_medium_aquamarine",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_aquamarine`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_aquamarine`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_aquamarine",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_AQUAMARINE",
          "color color_medium_aquamarine()"
        ],
        "rust": [
          "pub fn color_medium_aquamarine() -> color"
        ],
        "python": [
          "def color_medium_aquamarine():"
        ],
        "pascal": [
          "function ColorMediumAquamarine(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumAquamarine { get }",
          "public static Color SplashKit.ColorMediumAquamarine();"
        ]
      }
    },
    {
      "signature": "color color_medium_blue();",
      "name": "color_medium_blue",
      "method_name": null,
      "unique_global_name": "color_medium_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_BLUE",
          "color color_medium_blue()"
        ],
        "rust": [
          "pub fn color_medium_blue() -> color"
        ],
        "python": [
          "def color_medium_blue():"
        ],
        "pascal": [
          "function ColorMediumBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumBlue { get }",
          "public static Color SplashKit.ColorMediumBlue();"
        ]
      }
    },
    {
      "signature": "color color_medium_orchid();",
      "name": "color_medium_orchid",
      "method_name": null,
      "unique_global_name": "color_medium_orchid",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_orchid`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_orchid`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_orchid",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_ORCHID",
          "color color_medium_orchid()"
        ],
        "rust": [
          "pub fn color_medium_orchid() -> color"
        ],
        "python": [
          "def color_medium_orchid():"
        ],
        "pascal": [
          "function ColorMediumOrchid(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumOrchid { get }",
          "public static Color SplashKit.ColorMediumOrchid();"
        ]
      }
    },
    {
      "signature": "color color_medium_purple();",
      "name": "color_medium_purple",
      "method_name": null,
      "unique_global_name": "color_medium_purple",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_purple`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_purple`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_purple",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_PURPLE",
          "color color_medium_purple()"
        ],
        "rust": [
          "pub fn color_medium_purple() -> color"
        ],
        "python": [
          "def color_medium_purple():"
        ],
        "pascal": [
          "function ColorMediumPurple(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumPurple { get }",
          "public static Color SplashKit.ColorMediumPurple();"
        ]
      }
    },
    {
      "signature": "color color_medium_sea_green();",
      "name": "color_medium_sea_green",
      "method_name": null,
      "unique_global_name": "color_medium_sea_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_sea_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_sea_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_sea_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_SEA_GREEN",
          "color color_medium_sea_green()"
        ],
        "rust": [
          "pub fn color_medium_sea_green() -> color"
        ],
        "python": [
          "def color_medium_sea_green():"
        ],
        "pascal": [
          "function ColorMediumSeaGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumSeaGreen { get }",
          "public static Color SplashKit.ColorMediumSeaGreen();"
        ]
      }
    },
    {
      "signature": "color color_medium_slate_blue();",
      "name": "color_medium_slate_blue",
      "method_name": null,
      "unique_global_name": "color_medium_slate_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_slate_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_slate_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_slate_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_SLATE_BLUE",
          "color color_medium_slate_blue()"
        ],
        "rust": [
          "pub fn color_medium_slate_blue() -> color"
        ],
        "python": [
          "def color_medium_slate_blue():"
        ],
        "pascal": [
          "function ColorMediumSlateBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumSlateBlue { get }",
          "public static Color SplashKit.ColorMediumSlateBlue();"
        ]
      }
    },
    {
      "signature": "color color_medium_spring_green();",
      "name": "color_medium_spring_green",
      "method_name": null,
      "unique_global_name": "color_medium_spring_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_spring_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_spring_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_spring_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_SPRING_GREEN",
          "color color_medium_spring_green()"
        ],
        "rust": [
          "pub fn color_medium_spring_green() -> color"
        ],
        "python": [
          "def color_medium_spring_green():"
        ],
        "pascal": [
          "function ColorMediumSpringGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumSpringGreen { get }",
          "public static Color SplashKit.ColorMediumSpringGreen();"
        ]
      }
    },
    {
      "signature": "color color_medium_turquoise();",
      "name": "color_medium_turquoise",
      "method_name": null,
      "unique_global_name": "color_medium_turquoise",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_turquoise`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_turquoise`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_turquoise",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_TURQUOISE",
          "color color_medium_turquoise()"
        ],
        "rust": [
          "pub fn color_medium_turquoise() -> color"
        ],
        "python": [
          "def color_medium_turquoise():"
        ],
        "pascal": [
          "function ColorMediumTurquoise(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumTurquoise { get }",
          "public static Color SplashKit.ColorMediumTurquoise();"
        ]
      }
    },
    {
      "signature": "color color_medium_violet_red();",
      "name": "color_medium_violet_red",
      "method_name": null,
      "unique_global_name": "color_medium_violet_red",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `medium_violet_red`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `medium_violet_red`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "medium_violet_red",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MEDIUM_VIOLET_RED",
          "color color_medium_violet_red()"
        ],
        "rust": [
          "pub fn color_medium_violet_red() -> color"
        ],
        "python": [
          "def color_medium_violet_red():"
        ],
        "pascal": [
          "function ColorMediumVioletRed(): Color"
        ],
        "csharp": [
          "public static Color Color.MediumVioletRed { get }",
          "public static Color SplashKit.ColorMediumVioletRed();"
        ]
      }
    },
    {
      "signature": "color color_midnight_blue();",
      "name": "color_midnight_blue",
      "method_name": null,
      "unique_global_name": "color_midnight_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `midnight_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `midnight_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "midnight_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MIDNIGHT_BLUE",
          "color color_midnight_blue()"
        ],
        "rust": [
          "pub fn color_midnight_blue() -> color"
        ],
        "python": [
          "def color_midnight_blue():"
        ],
        "pascal": [
          "function ColorMidnightBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.MidnightBlue { get }",
          "public static Color SplashKit.ColorMidnightBlue();"
        ]
      }
    },
    {
      "signature": "color color_mint_cream();",
      "name": "color_mint_cream",
      "method_name": null,
      "unique_global_name": "color_mint_cream",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `mint_cream`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `mint_cream`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "mint_cream",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MINT_CREAM",
          "color color_mint_cream()"
        ],
        "rust": [
          "pub fn color_mint_cream() -> color"
        ],
        "python": [
          "def color_mint_cream():"
        ],
        "pascal": [
          "function ColorMintCream(): Color"
        ],
        "csharp": [
          "public static Color Color.MintCream { get }",
          "public static Color SplashKit.ColorMintCream();"
        ]
      }
    },
    {
      "signature": "color color_misty_rose();",
      "name": "color_misty_rose",
      "method_name": null,
      "unique_global_name": "color_misty_rose",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `misty_rose`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `misty_rose`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "misty_rose",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MISTY_ROSE",
          "color color_misty_rose()"
        ],
        "rust": [
          "pub fn color_misty_rose() -> color"
        ],
        "python": [
          "def color_misty_rose():"
        ],
        "pascal": [
          "function ColorMistyRose(): Color"
        ],
        "csharp": [
          "public static Color Color.MistyRose { get }",
          "public static Color SplashKit.ColorMistyRose();"
        ]
      }
    },
    {
      "signature": "color color_moccasin();",
      "name": "color_moccasin",
      "method_name": null,
      "unique_global_name": "color_moccasin",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `moccasin`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `moccasin`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "moccasin",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_MOCCASIN",
          "color color_moccasin()"
        ],
        "rust": [
          "pub fn color_moccasin() -> color"
        ],
        "python": [
          "def color_moccasin():"
        ],
        "pascal": [
          "function ColorMoccasin(): Color"
        ],
        "csharp": [
          "public static Color Color.Moccasin { get }",
          "public static Color SplashKit.ColorMoccasin();"
        ]
      }
    },
    {
      "signature": "color color_navajo_white();",
      "name": "color_navajo_white",
      "method_name": null,
      "unique_global_name": "color_navajo_white",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `navajo_white`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `navajo_white`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "navajo_white",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_NAVAJO_WHITE",
          "color color_navajo_white()"
        ],
        "rust": [
          "pub fn color_navajo_white() -> color"
        ],
        "python": [
          "def color_navajo_white():"
        ],
        "pascal": [
          "function ColorNavajoWhite(): Color"
        ],
        "csharp": [
          "public static Color Color.NavajoWhite { get }",
          "public static Color SplashKit.ColorNavajoWhite();"
        ]
      }
    },
    {
      "signature": "color color_navy();",
      "name": "color_navy",
      "method_name": null,
      "unique_global_name": "color_navy",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `navy`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `navy`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "navy",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_NAVY",
          "color color_navy()"
        ],
        "rust": [
          "pub fn color_navy() -> color"
        ],
        "python": [
          "def color_navy():"
        ],
        "pascal": [
          "function ColorNavy(): Color"
        ],
        "csharp": [
          "public static Color Color.Navy { get }",
          "public static Color SplashKit.ColorNavy();"
        ]
      }
    },
    {
      "signature": "color color_old_lace();",
      "name": "color_old_lace",
      "method_name": null,
      "unique_global_name": "color_old_lace",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `old_lace`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `old_lace`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "old_lace",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_OLD_LACE",
          "color color_old_lace()"
        ],
        "rust": [
          "pub fn color_old_lace() -> color"
        ],
        "python": [
          "def color_old_lace():"
        ],
        "pascal": [
          "function ColorOldLace(): Color"
        ],
        "csharp": [
          "public static Color Color.OldLace { get }",
          "public static Color SplashKit.ColorOldLace();"
        ]
      }
    },
    {
      "signature": "color color_olive();",
      "name": "color_olive",
      "method_name": null,
      "unique_global_name": "color_olive",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `olive`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `olive`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "olive",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_OLIVE",
          "color color_olive()"
        ],
        "rust": [
          "pub fn color_olive() -> color"
        ],
        "python": [
          "def color_olive():"
        ],
        "pascal": [
          "function ColorOlive(): Color"
        ],
        "csharp": [
          "public static Color Color.Olive { get }",
          "public static Color SplashKit.ColorOlive();"
        ]
      }
    },
    {
      "signature": "color color_olive_drab();",
      "name": "color_olive_drab",
      "method_name": null,
      "unique_global_name": "color_olive_drab",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `olive_drab`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `olive_drab`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "olive_drab",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_OLIVE_DRAB",
          "color color_olive_drab()"
        ],
        "rust": [
          "pub fn color_olive_drab() -> color"
        ],
        "python": [
          "def color_olive_drab():"
        ],
        "pascal": [
          "function ColorOliveDrab(): Color"
        ],
        "csharp": [
          "public static Color Color.OliveDrab { get }",
          "public static Color SplashKit.ColorOliveDrab();"
        ]
      }
    },
    {
      "signature": "color color_orange();",
      "name": "color_orange",
      "method_name": null,
      "unique_global_name": "color_orange",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `orange`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `orange`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "orange",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_ORANGE",
          "color color_orange()"
        ],
        "rust": [
          "pub fn color_orange() -> color"
        ],
        "python": [
          "def color_orange():"
        ],
        "pascal": [
          "function ColorOrange(): Color"
        ],
        "csharp": [
          "public static Color Color.Orange { get }",
          "public static Color SplashKit.ColorOrange();"
        ]
      }
    },
    {
      "signature": "color color_orange_red();",
      "name": "color_orange_red",
      "method_name": null,
      "unique_global_name": "color_orange_red",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `orange_red`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `orange_red`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "orange_red",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_ORANGE_RED",
          "color color_orange_red()"
        ],
        "rust": [
          "pub fn color_orange_red() -> color"
        ],
        "python": [
          "def color_orange_red():"
        ],
        "pascal": [
          "function ColorOrangeRed(): Color"
        ],
        "csharp": [
          "public static Color Color.OrangeRed { get }",
          "public static Color SplashKit.ColorOrangeRed();"
        ]
      }
    },
    {
      "signature": "color color_orchid();",
      "name": "color_orchid",
      "method_name": null,
      "unique_global_name": "color_orchid",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `orchid`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `orchid`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "orchid",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_ORCHID",
          "color color_orchid()"
        ],
        "rust": [
          "pub fn color_orchid() -> color"
        ],
        "python": [
          "def color_orchid():"
        ],
        "pascal": [
          "function ColorOrchid(): Color"
        ],
        "csharp": [
          "public static Color Color.Orchid { get }",
          "public static Color SplashKit.ColorOrchid();"
        ]
      }
    },
    {
      "signature": "color color_pale_goldenrod();",
      "name": "color_pale_goldenrod",
      "method_name": null,
      "unique_global_name": "color_pale_goldenrod",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `pale_goldenrod`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `pale_goldenrod`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "pale_goldenrod",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PALE_GOLDENROD",
          "color color_pale_goldenrod()"
        ],
        "rust": [
          "pub fn color_pale_goldenrod() -> color"
        ],
        "python": [
          "def color_pale_goldenrod():"
        ],
        "pascal": [
          "function ColorPaleGoldenrod(): Color"
        ],
        "csharp": [
          "public static Color Color.PaleGoldenrod { get }",
          "public static Color SplashKit.ColorPaleGoldenrod();"
        ]
      }
    },
    {
      "signature": "color color_pale_green();",
      "name": "color_pale_green",
      "method_name": null,
      "unique_global_name": "color_pale_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `pale_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `pale_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "pale_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PALE_GREEN",
          "color color_pale_green()"
        ],
        "rust": [
          "pub fn color_pale_green() -> color"
        ],
        "python": [
          "def color_pale_green():"
        ],
        "pascal": [
          "function ColorPaleGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.PaleGreen { get }",
          "public static Color SplashKit.ColorPaleGreen();"
        ]
      }
    },
    {
      "signature": "color color_pale_turquoise();",
      "name": "color_pale_turquoise",
      "method_name": null,
      "unique_global_name": "color_pale_turquoise",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `pale_turquoise`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `pale_turquoise`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "pale_turquoise",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PALE_TURQUOISE",
          "color color_pale_turquoise()"
        ],
        "rust": [
          "pub fn color_pale_turquoise() -> color"
        ],
        "python": [
          "def color_pale_turquoise():"
        ],
        "pascal": [
          "function ColorPaleTurquoise(): Color"
        ],
        "csharp": [
          "public static Color Color.PaleTurquoise { get }",
          "public static Color SplashKit.ColorPaleTurquoise();"
        ]
      }
    },
    {
      "signature": "color color_pale_violet_red();",
      "name": "color_pale_violet_red",
      "method_name": null,
      "unique_global_name": "color_pale_violet_red",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `pale_violet_red`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `pale_violet_red`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "pale_violet_red",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PALE_VIOLET_RED",
          "color color_pale_violet_red()"
        ],
        "rust": [
          "pub fn color_pale_violet_red() -> color"
        ],
        "python": [
          "def color_pale_violet_red():"
        ],
        "pascal": [
          "function ColorPaleVioletRed(): Color"
        ],
        "csharp": [
          "public static Color Color.PaleVioletRed { get }",
          "public static Color SplashKit.ColorPaleVioletRed();"
        ]
      }
    },
    {
      "signature": "color color_papaya_whip();",
      "name": "color_papaya_whip",
      "method_name": null,
      "unique_global_name": "color_papaya_whip",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `papaya_whip`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `papaya_whip`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "papaya_whip",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PAPAYA_WHIP",
          "color color_papaya_whip()"
        ],
        "rust": [
          "pub fn color_papaya_whip() -> color"
        ],
        "python": [
          "def color_papaya_whip():"
        ],
        "pascal": [
          "function ColorPapayaWhip(): Color"
        ],
        "csharp": [
          "public static Color Color.PapayaWhip { get }",
          "public static Color SplashKit.ColorPapayaWhip();"
        ]
      }
    },
    {
      "signature": "color color_peach_puff();",
      "name": "color_peach_puff",
      "method_name": null,
      "unique_global_name": "color_peach_puff",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `peach_puff`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `peach_puff`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "peach_puff",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PEACH_PUFF",
          "color color_peach_puff()"
        ],
        "rust": [
          "pub fn color_peach_puff() -> color"
        ],
        "python": [
          "def color_peach_puff():"
        ],
        "pascal": [
          "function ColorPeachPuff(): Color"
        ],
        "csharp": [
          "public static Color Color.PeachPuff { get }",
          "public static Color SplashKit.ColorPeachPuff();"
        ]
      }
    },
    {
      "signature": "color color_peru();",
      "name": "color_peru",
      "method_name": null,
      "unique_global_name": "color_peru",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `peru`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `peru`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "peru",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PERU",
          "color color_peru()"
        ],
        "rust": [
          "pub fn color_peru() -> color"
        ],
        "python": [
          "def color_peru():"
        ],
        "pascal": [
          "function ColorPeru(): Color"
        ],
        "csharp": [
          "public static Color Color.Peru { get }",
          "public static Color SplashKit.ColorPeru();"
        ]
      }
    },
    {
      "signature": "color color_pink();",
      "name": "color_pink",
      "method_name": null,
      "unique_global_name": "color_pink",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `pink`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `pink`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "pink",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PINK",
          "color color_pink()"
        ],
        "rust": [
          "pub fn color_pink() -> color"
        ],
        "python": [
          "def color_pink():"
        ],
        "pascal": [
          "function ColorPink(): Color"
        ],
        "csharp": [
          "public static Color Color.Pink { get }",
          "public static Color SplashKit.ColorPink();"
        ]
      }
    },
    {
      "signature": "color color_plum();",
      "name": "color_plum",
      "method_name": null,
      "unique_global_name": "color_plum",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `plum`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `plum`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "plum",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PLUM",
          "color color_plum()"
        ],
        "rust": [
          "pub fn color_plum() -> color"
        ],
        "python": [
          "def color_plum():"
        ],
        "pascal": [
          "function ColorPlum(): Color"
        ],
        "csharp": [
          "public static Color Color.Plum { get }",
          "public static Color SplashKit.ColorPlum();"
        ]
      }
    },
    {
      "signature": "color color_powder_blue();",
      "name": "color_powder_blue",
      "method_name": null,
      "unique_global_name": "color_powder_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `powder_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `powder_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "powder_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_POWDER_BLUE",
          "color color_powder_blue()"
        ],
        "rust": [
          "pub fn color_powder_blue() -> color"
        ],
        "python": [
          "def color_powder_blue():"
        ],
        "pascal": [
          "function ColorPowderBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.PowderBlue { get }",
          "public static Color SplashKit.ColorPowderBlue();"
        ]
      }
    },
    {
      "signature": "color color_purple();",
      "name": "color_purple",
      "method_name": null,
      "unique_global_name": "color_purple",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `purple`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `purple`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "purple",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_PURPLE",
          "color color_purple()"
        ],
        "rust": [
          "pub fn color_purple() -> color"
        ],
        "python": [
          "def color_purple():"
        ],
        "pascal": [
          "function ColorPurple(): Color"
        ],
        "csharp": [
          "public static Color Color.Purple { get }",
          "public static Color SplashKit.ColorPurple();"
        ]
      }
    },
    {
      "signature": "color color_red();",
      "name": "color_red",
      "method_name": null,
      "unique_global_name": "color_red",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `red`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `red`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "red",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_RED",
          "color color_red()"
        ],
        "rust": [
          "pub fn color_red() -> color"
        ],
        "python": [
          "def color_red():"
        ],
        "pascal": [
          "function ColorRed(): Color"
        ],
        "csharp": [
          "public static Color Color.Red { get }",
          "public static Color SplashKit.ColorRed();"
        ]
      }
    },
    {
      "signature": "color color_rosy_brown();",
      "name": "color_rosy_brown",
      "method_name": null,
      "unique_global_name": "color_rosy_brown",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `rosy_brown`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `rosy_brown`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "rosy_brown",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_ROSY_BROWN",
          "color color_rosy_brown()"
        ],
        "rust": [
          "pub fn color_rosy_brown() -> color"
        ],
        "python": [
          "def color_rosy_brown():"
        ],
        "pascal": [
          "function ColorRosyBrown(): Color"
        ],
        "csharp": [
          "public static Color Color.RosyBrown { get }",
          "public static Color SplashKit.ColorRosyBrown();"
        ]
      }
    },
    {
      "signature": "color color_royal_blue();",
      "name": "color_royal_blue",
      "method_name": null,
      "unique_global_name": "color_royal_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `royal_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `royal_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "royal_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_ROYAL_BLUE",
          "color color_royal_blue()"
        ],
        "rust": [
          "pub fn color_royal_blue() -> color"
        ],
        "python": [
          "def color_royal_blue():"
        ],
        "pascal": [
          "function ColorRoyalBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.RoyalBlue { get }",
          "public static Color SplashKit.ColorRoyalBlue();"
        ]
      }
    },
    {
      "signature": "color color_saddle_brown();",
      "name": "color_saddle_brown",
      "method_name": null,
      "unique_global_name": "color_saddle_brown",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `saddle_brown`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `saddle_brown`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "saddle_brown",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SADDLE_BROWN",
          "color color_saddle_brown()"
        ],
        "rust": [
          "pub fn color_saddle_brown() -> color"
        ],
        "python": [
          "def color_saddle_brown():"
        ],
        "pascal": [
          "function ColorSaddleBrown(): Color"
        ],
        "csharp": [
          "public static Color Color.SaddleBrown { get }",
          "public static Color SplashKit.ColorSaddleBrown();"
        ]
      }
    },
    {
      "signature": "color color_salmon();",
      "name": "color_salmon",
      "method_name": null,
      "unique_global_name": "color_salmon",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `salmon`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `salmon`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "salmon",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SALMON",
          "color color_salmon()"
        ],
        "rust": [
          "pub fn color_salmon() -> color"
        ],
        "python": [
          "def color_salmon():"
        ],
        "pascal": [
          "function ColorSalmon(): Color"
        ],
        "csharp": [
          "public static Color Color.Salmon { get }",
          "public static Color SplashKit.ColorSalmon();"
        ]
      }
    },
    {
      "signature": "color color_sandy_brown();",
      "name": "color_sandy_brown",
      "method_name": null,
      "unique_global_name": "color_sandy_brown",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `sandy_brown`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `sandy_brown`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "sandy_brown",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SANDY_BROWN",
          "color color_sandy_brown()"
        ],
        "rust": [
          "pub fn color_sandy_brown() -> color"
        ],
        "python": [
          "def color_sandy_brown():"
        ],
        "pascal": [
          "function ColorSandyBrown(): Color"
        ],
        "csharp": [
          "public static Color Color.SandyBrown { get }",
          "public static Color SplashKit.ColorSandyBrown();"
        ]
      }
    },
    {
      "signature": "color color_sea_green();",
      "name": "color_sea_green",
      "method_name": null,
      "unique_global_name": "color_sea_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `sea_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `sea_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "sea_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SEA_GREEN",
          "color color_sea_green()"
        ],
        "rust": [
          "pub fn color_sea_green() -> color"
        ],
        "python": [
          "def color_sea_green():"
        ],
        "pascal": [
          "function ColorSeaGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.SeaGreen { get }",
          "public static Color SplashKit.ColorSeaGreen();"
        ]
      }
    },
    {
      "signature": "color color_sea_shell();",
      "name": "color_sea_shell",
      "method_name": null,
      "unique_global_name": "color_sea_shell",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `sea_shell`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `sea_shell`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "sea_shell",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SEA_SHELL",
          "color color_sea_shell()"
        ],
        "rust": [
          "pub fn color_sea_shell() -> color"
        ],
        "python": [
          "def color_sea_shell():"
        ],
        "pascal": [
          "function ColorSeaShell(): Color"
        ],
        "csharp": [
          "public static Color Color.SeaShell { get }",
          "public static Color SplashKit.ColorSeaShell();"
        ]
      }
    },
    {
      "signature": "color color_sienna();",
      "name": "color_sienna",
      "method_name": null,
      "unique_global_name": "color_sienna",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `sienna`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `sienna`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "sienna",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SIENNA",
          "color color_sienna()"
        ],
        "rust": [
          "pub fn color_sienna() -> color"
        ],
        "python": [
          "def color_sienna():"
        ],
        "pascal": [
          "function ColorSienna(): Color"
        ],
        "csharp": [
          "public static Color Color.Sienna { get }",
          "public static Color SplashKit.ColorSienna();"
        ]
      }
    },
    {
      "signature": "color color_silver();",
      "name": "color_silver",
      "method_name": null,
      "unique_global_name": "color_silver",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `silver`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `silver`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "silver",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SILVER",
          "color color_silver()"
        ],
        "rust": [
          "pub fn color_silver() -> color"
        ],
        "python": [
          "def color_silver():"
        ],
        "pascal": [
          "function ColorSilver(): Color"
        ],
        "csharp": [
          "public static Color Color.Silver { get }",
          "public static Color SplashKit.ColorSilver();"
        ]
      }
    },
    {
      "signature": "color color_sky_blue();",
      "name": "color_sky_blue",
      "method_name": null,
      "unique_global_name": "color_sky_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `sky_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `sky_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "sky_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SKY_BLUE",
          "color color_sky_blue()"
        ],
        "rust": [
          "pub fn color_sky_blue() -> color"
        ],
        "python": [
          "def color_sky_blue():"
        ],
        "pascal": [
          "function ColorSkyBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.SkyBlue { get }",
          "public static Color SplashKit.ColorSkyBlue();"
        ]
      }
    },
    {
      "signature": "color color_slate_blue();",
      "name": "color_slate_blue",
      "method_name": null,
      "unique_global_name": "color_slate_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `slate_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `slate_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "slate_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SLATE_BLUE",
          "color color_slate_blue()"
        ],
        "rust": [
          "pub fn color_slate_blue() -> color"
        ],
        "python": [
          "def color_slate_blue():"
        ],
        "pascal": [
          "function ColorSlateBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.SlateBlue { get }",
          "public static Color SplashKit.ColorSlateBlue();"
        ]
      }
    },
    {
      "signature": "color color_slate_gray();",
      "name": "color_slate_gray",
      "method_name": null,
      "unique_global_name": "color_slate_gray",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `slate_gray`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `slate_gray`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "slate_gray",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SLATE_GRAY",
          "color color_slate_gray()"
        ],
        "rust": [
          "pub fn color_slate_gray() -> color"
        ],
        "python": [
          "def color_slate_gray():"
        ],
        "pascal": [
          "function ColorSlateGray(): Color"
        ],
        "csharp": [
          "public static Color Color.SlateGray { get }",
          "public static Color SplashKit.ColorSlateGray();"
        ]
      }
    },
    {
      "signature": "color color_snow();",
      "name": "color_snow",
      "method_name": null,
      "unique_global_name": "color_snow",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `snow`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `snow`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "snow",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SNOW",
          "color color_snow()"
        ],
        "rust": [
          "pub fn color_snow() -> color"
        ],
        "python": [
          "def color_snow():"
        ],
        "pascal": [
          "function ColorSnow(): Color"
        ],
        "csharp": [
          "public static Color Color.Snow { get }",
          "public static Color SplashKit.ColorSnow();"
        ]
      }
    },
    {
      "signature": "color color_spring_green();",
      "name": "color_spring_green",
      "method_name": null,
      "unique_global_name": "color_spring_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `spring_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `spring_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "spring_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SPRING_GREEN",
          "color color_spring_green()"
        ],
        "rust": [
          "pub fn color_spring_green() -> color"
        ],
        "python": [
          "def color_spring_green():"
        ],
        "pascal": [
          "function ColorSpringGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.SpringGreen { get }",
          "public static Color SplashKit.ColorSpringGreen();"
        ]
      }
    },
    {
      "signature": "color color_steel_blue();",
      "name": "color_steel_blue",
      "method_name": null,
      "unique_global_name": "color_steel_blue",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `steel_blue`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `steel_blue`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "steel_blue",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_STEEL_BLUE",
          "color color_steel_blue()"
        ],
        "rust": [
          "pub fn color_steel_blue() -> color"
        ],
        "python": [
          "def color_steel_blue():"
        ],
        "pascal": [
          "function ColorSteelBlue(): Color"
        ],
        "csharp": [
          "public static Color Color.SteelBlue { get }",
          "public static Color SplashKit.ColorSteelBlue();"
        ]
      }
    },
    {
      "signature": "color color_swinburne_red();",
      "name": "color_swinburne_red",
      "method_name": null,
      "unique_global_name": "color_swinburne_red",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `swinburne_red`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `swinburne_red`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "swinburne_red",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_SWINBURNE_RED",
          "color color_swinburne_red()"
        ],
        "rust": [
          "pub fn color_swinburne_red() -> color"
        ],
        "python": [
          "def color_swinburne_red():"
        ],
        "pascal": [
          "function ColorSwinburneRed(): Color"
        ],
        "csharp": [
          "public static Color Color.SwinburneRed { get }",
          "public static Color SplashKit.ColorSwinburneRed();"
        ]
      }
    },
    {
      "signature": "color color_tan();",
      "name": "color_tan",
      "method_name": null,
      "unique_global_name": "color_tan",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `tan`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `tan`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "tan",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_TAN",
          "color color_tan()"
        ],
        "rust": [
          "pub fn color_tan() -> color"
        ],
        "python": [
          "def color_tan():"
        ],
        "pascal": [
          "function ColorTan(): Color"
        ],
        "csharp": [
          "public static Color Color.Tan { get }",
          "public static Color SplashKit.ColorTan();"
        ]
      }
    },
    {
      "signature": "color color_teal();",
      "name": "color_teal",
      "method_name": null,
      "unique_global_name": "color_teal",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `teal`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `teal`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "teal",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_TEAL",
          "color color_teal()"
        ],
        "rust": [
          "pub fn color_teal() -> color"
        ],
        "python": [
          "def color_teal():"
        ],
        "pascal": [
          "function ColorTeal(): Color"
        ],
        "csharp": [
          "public static Color Color.Teal { get }",
          "public static Color SplashKit.ColorTeal();"
        ]
      }
    },
    {
      "signature": "color color_thistle();",
      "name": "color_thistle",
      "method_name": null,
      "unique_global_name": "color_thistle",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `thistle`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `thistle`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "thistle",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_THISTLE",
          "color color_thistle()"
        ],
        "rust": [
          "pub fn color_thistle() -> color"
        ],
        "python": [
          "def color_thistle():"
        ],
        "pascal": [
          "function ColorThistle(): Color"
        ],
        "csharp": [
          "public static Color Color.Thistle { get }",
          "public static Color SplashKit.ColorThistle();"
        ]
      }
    },
    {
      "signature": "string color_to_string(color c);",
      "name": "color_to_string",
      "method_name": null,
      "unique_global_name": "color_to_string",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns a string representation of the color.\nFormat will be a hex string starting with a #,\nfollowed by the red, green, blue, and alpha\nvalues of the color.",
      "brief": null,
      "return": {
        "type": "string",
        "description": "A hex string representing the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "string color_to_string(color c)"
        ],
        "rust": [
          "pub fn color_to_string(c: color) -> String"
        ],
        "python": [
          "def color_to_string(c):"
        ],
        "pascal": [
          "function ColorToString(c: Color): String"
        ],
        "csharp": [
          "public static string SplashKit.ColorToString(Color c);"
        ]
      }
    },
    {
      "signature": "color color_tomato();",
      "name": "color_tomato",
      "method_name": null,
      "unique_global_name": "color_tomato",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `tomato`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `tomato`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "tomato",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_TOMATO",
          "color color_tomato()"
        ],
        "rust": [
          "pub fn color_tomato() -> color"
        ],
        "python": [
          "def color_tomato():"
        ],
        "pascal": [
          "function ColorTomato(): Color"
        ],
        "csharp": [
          "public static Color Color.Tomato { get }",
          "public static Color SplashKit.ColorTomato();"
        ]
      }
    },
    {
      "signature": "color color_transparent();",
      "name": "color_transparent",
      "method_name": null,
      "unique_global_name": "color_transparent",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `transparent`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A `transparent` color (i.e., a color with an `alpha` of 0).",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "transparent",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_TRANSPARENT",
          "color color_transparent()"
        ],
        "rust": [
          "pub fn color_transparent() -> color"
        ],
        "python": [
          "def color_transparent():"
        ],
        "pascal": [
          "function ColorTransparent(): Color"
        ],
        "csharp": [
          "public static Color Color.Transparent { get }",
          "public static Color SplashKit.ColorTransparent();"
        ]
      }
    },
    {
      "signature": "color color_turquoise();",
      "name": "color_turquoise",
      "method_name": null,
      "unique_global_name": "color_turquoise",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `turquoise`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `turquoise`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "turquoise",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_TURQUOISE",
          "color color_turquoise()"
        ],
        "rust": [
          "pub fn color_turquoise() -> color"
        ],
        "python": [
          "def color_turquoise():"
        ],
        "pascal": [
          "function ColorTurquoise(): Color"
        ],
        "csharp": [
          "public static Color Color.Turquoise { get }",
          "public static Color SplashKit.ColorTurquoise();"
        ]
      }
    },
    {
      "signature": "color color_violet();",
      "name": "color_violet",
      "method_name": null,
      "unique_global_name": "color_violet",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `violet`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `violet`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "violet",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_VIOLET",
          "color color_violet()"
        ],
        "rust": [
          "pub fn color_violet() -> color"
        ],
        "python": [
          "def color_violet():"
        ],
        "pascal": [
          "function ColorViolet(): Color"
        ],
        "csharp": [
          "public static Color Color.Violet { get }",
          "public static Color SplashKit.ColorViolet();"
        ]
      }
    },
    {
      "signature": "color color_wheat();",
      "name": "color_wheat",
      "method_name": null,
      "unique_global_name": "color_wheat",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `wheat`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `wheat`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "wheat",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_WHEAT",
          "color color_wheat()"
        ],
        "rust": [
          "pub fn color_wheat() -> color"
        ],
        "python": [
          "def color_wheat():"
        ],
        "pascal": [
          "function ColorWheat(): Color"
        ],
        "csharp": [
          "public static Color Color.Wheat { get }",
          "public static Color SplashKit.ColorWheat();"
        ]
      }
    },
    {
      "signature": "color color_white();",
      "name": "color_white",
      "method_name": null,
      "unique_global_name": "color_white",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `white`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `white`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "white",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_WHITE",
          "color color_white()"
        ],
        "rust": [
          "pub fn color_white() -> color"
        ],
        "python": [
          "def color_white():"
        ],
        "pascal": [
          "function ColorWhite(): Color"
        ],
        "csharp": [
          "public static Color Color.White { get }",
          "public static Color SplashKit.ColorWhite();"
        ]
      }
    },
    {
      "signature": "color color_white_smoke();",
      "name": "color_white_smoke",
      "method_name": null,
      "unique_global_name": "color_white_smoke",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `white_smoke`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `white_smoke`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "white_smoke",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_WHITE_SMOKE",
          "color color_white_smoke()"
        ],
        "rust": [
          "pub fn color_white_smoke() -> color"
        ],
        "python": [
          "def color_white_smoke():"
        ],
        "pascal": [
          "function ColorWhiteSmoke(): Color"
        ],
        "csharp": [
          "public static Color Color.WhiteSmoke { get }",
          "public static Color SplashKit.ColorWhiteSmoke();"
        ]
      }
    },
    {
      "signature": "color color_yellow();",
      "name": "color_yellow",
      "method_name": null,
      "unique_global_name": "color_yellow",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `yellow`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `yellow`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "yellow",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_YELLOW",
          "color color_yellow()"
        ],
        "rust": [
          "pub fn color_yellow() -> color"
        ],
        "python": [
          "def color_yellow():"
        ],
        "pascal": [
          "function ColorYellow(): Color"
        ],
        "csharp": [
          "public static Color Color.Yellow { get }",
          "public static Color SplashKit.ColorYellow();"
        ]
      }
    },
    {
      "signature": "color color_yellow_green();",
      "name": "color_yellow_green",
      "method_name": null,
      "unique_global_name": "color_yellow_green",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Generates a new `color` associated to the color `yellow_green`.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A new `color` set to `yellow_green`.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "getter": "yellow_green",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "#define COLOR_YELLOW_GREEN",
          "color color_yellow_green()"
        ],
        "rust": [
          "pub fn color_yellow_green() -> color"
        ],
        "python": [
          "def color_yellow_green():"
        ],
        "pascal": [
          "function ColorYellowGreen(): Color"
        ],
        "csharp": [
          "public static Color Color.YellowGreen { get }",
          "public static Color SplashKit.ColorYellowGreen();"
        ]
      }
    },
    {
      "signature": "int green_of(color c);",
      "name": "green_of",
      "method_name": null,
      "unique_global_name": "green_of",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns the green of the supplied color.",
      "brief": null,
      "return": {
        "type": "int",
        "description": "The green component of the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "int green_of(color c)"
        ],
        "rust": [
          "pub fn green_of(c: color) -> i32"
        ],
        "python": [
          "def green_of(c):"
        ],
        "pascal": [
          "function GreenOf(c: Color): Integer"
        ],
        "csharp": [
          "public static int SplashKit.GreenOf(Color c);"
        ]
      }
    },
    {
      "signature": "color hsb_color(double hue,double saturation,double brightness);",
      "name": "hsb_color",
      "method_name": "hsb_color",
      "unique_global_name": "hsb_color",
      "unique_method_name": ".hsb_color",
      "suffix_name": null,
      "description": "Returs a color from a combination of hue, saturation, and brightness.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "The color from its hue, saturation and brightness.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "hue": {
          "type": "double",
          "description": "The hue of the color. Value must be between 0 and 1.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "saturation": {
          "type": "double",
          "description": "The saturation of that hue. Value must be between 0 and 1.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "brightness": {
          "type": "double",
          "description": "The brightness of the color. Value must be between 0 and 1.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "method": "hsb_color",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color hsb_color(double hue, double saturation, double brightness)"
        ],
        "rust": [
          "pub fn hsb_color(hue: f64, saturation: f64, brightness: f64) -> color"
        ],
        "python": [
          "def hsb_color(hue, saturation, brightness):"
        ],
        "pascal": [
          "function HSBColor(hue: Double; saturation: Double; brightness: Double): Color"
        ],
        "csharp": [
          "public static Color Color.HSBColor(double hue, double saturation, double brightness);",
          "public static Color SplashKit.HSBColor(double hue, double saturation, double brightness);"
        ]
      }
    },
    {
      "signature": "double hue_of(color c);",
      "name": "hue_of",
      "method_name": null,
      "unique_global_name": "hue_of",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns the hue of the supplied color.",
      "brief": null,
      "return": {
        "type": "double",
        "description": "The hue component of the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "double hue_of(color c)"
        ],
        "rust": [
          "pub fn hue_of(c: color) -> f64"
        ],
        "python": [
          "def hue_of(c):"
        ],
        "pascal": [
          "function HueOf(c: Color): Double"
        ],
        "csharp": [
          "public static double SplashKit.HueOf(Color c);"
        ]
      }
    },
    {
      "signature": "color random_color();",
      "name": "random_color",
      "method_name": "random",
      "unique_global_name": "random_color",
      "unique_method_name": ".random",
      "suffix_name": null,
      "description": "Creates and returns a random color where the color and its opacity are\nrandom.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A random color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "method": "random",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color random_color()"
        ],
        "rust": [
          "pub fn random_color() -> color"
        ],
        "python": [
          "def random_color():"
        ],
        "pascal": [
          "function RandomColor(): Color"
        ],
        "csharp": [
          "public static Color Color.RandomColor();",
          "public static Color SplashKit.RandomColor();"
        ]
      }
    },
    {
      "signature": "color random_rgb_color(int alpha);",
      "name": "random_rgb_color",
      "method_name": "random_rgb",
      "unique_global_name": "random_rgb_color",
      "unique_method_name": ".random_rgb",
      "suffix_name": null,
      "description": "Creates and returns a random color where the color is random, but the\nopacity is set to the passed in value.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "A random color with the set alpha",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "alpha": {
          "type": "int",
          "description": "The set alpha (opacity) value (between 0 and 255)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "method": "random_rgb",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color random_rgb_color(int alpha)"
        ],
        "rust": [
          "pub fn random_rgb_color(alpha: i32) -> color"
        ],
        "python": [
          "def random_rgb_color(alpha):"
        ],
        "pascal": [
          "function RandomRGBColor(alpha: Integer): Color"
        ],
        "csharp": [
          "public static Color Color.RandomRGBColor(int alpha);",
          "public static Color SplashKit.RandomRGBColor(int alpha);"
        ]
      }
    },
    {
      "signature": "int red_of(color c);",
      "name": "red_of",
      "method_name": null,
      "unique_global_name": "red_of",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns the red of the supplied color.",
      "brief": null,
      "return": {
        "type": "int",
        "description": "The red component of the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "int red_of(color c)"
        ],
        "rust": [
          "pub fn red_of(c: color) -> i32"
        ],
        "python": [
          "def red_of(c):"
        ],
        "pascal": [
          "function RedOf(c: Color): Integer"
        ],
        "csharp": [
          "public static int SplashKit.RedOf(Color c);"
        ]
      }
    },
    {
      "signature": "color rgb_color(double red,double green,double blue);",
      "name": "rgb_color",
      "method_name": "rgb_color",
      "unique_global_name": "rgb_color_from_double",
      "unique_method_name": ".rgb_color_from_double",
      "suffix_name": null,
      "description": "Gets a color given its RGB components. Each of the components has\na value between 0 and 1.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "The color from its different component",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "red": {
          "type": "double",
          "description": "The red component",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "green": {
          "type": "double",
          "description": "The green component",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "blue": {
          "type": "double",
          "description": "The blue component",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "method": "rgb_color",
        "static": "color",
        "suffix": "from_double",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color rgb_color(double red, double green, double blue)"
        ],
        "rust": [
          "pub fn rgb_color(red: f64, green: f64, blue: f64) -> color"
        ],
        "python": [
          "def rgb_color_from_double(red, green, blue):"
        ],
        "pascal": [
          "function RGBColor(red: Double; green: Double; blue: Double): Color"
        ],
        "csharp": [
          "public static Color Color.RGBColor(double red, double green, double blue);",
          "public static Color SplashKit.RGBColor(double red, double green, double blue);"
        ]
      }
    },
    {
      "signature": "color rgb_color(int red,int green,int blue);",
      "name": "rgb_color",
      "method_name": "rgb_color",
      "unique_global_name": "rgb_color",
      "unique_method_name": ".rgb_color",
      "suffix_name": null,
      "description": "Gets a color given its RGB components. Each of the components has\na value between 0 and 255.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "The color from its different component",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "red": {
          "type": "int",
          "description": "The red component",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "green": {
          "type": "int",
          "description": "The green component",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "blue": {
          "type": "int",
          "description": "The blue component",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "method": "rgb_color",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color rgb_color(int red, int green, int blue)"
        ],
        "rust": [
          "pub fn rgb_color(red: i32, green: i32, blue: i32) -> color"
        ],
        "python": [
          "def rgb_color(red, green, blue):"
        ],
        "pascal": [
          "function RGBColor(red: Integer; green: Integer; blue: Integer): Color"
        ],
        "csharp": [
          "public static Color Color.RGBColor(int red, int green, int blue);",
          "public static Color SplashKit.RGBColor(int red, int green, int blue);"
        ]
      }
    },
    {
      "signature": "color rgba_color(double red,double green,double blue,double alpha);",
      "name": "rgba_color",
      "method_name": "rgba_color",
      "unique_global_name": "rgba_color_from_double",
      "unique_method_name": ".rgba_color_from_double",
      "suffix_name": null,
      "description": "Gets a color given its color components. Each of the components has\na value between 0 and 1.0.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "The color from its different component",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "red": {
          "type": "double",
          "description": "The red component (between 0 and 1.0)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "green": {
          "type": "double",
          "description": "The green component (between 0 and 1.0)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "blue": {
          "type": "double",
          "description": "The blue component (between 0 and 1.0)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "alpha": {
          "type": "double",
          "description": "The alpha (opacity) component (between 0 and 1.0)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "method": "rgba_color",
        "static": "color",
        "suffix": "from_double",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color rgba_color(double red, double green, double blue, double alpha)"
        ],
        "rust": [
          "pub fn rgba_color(red: f64, green: f64, blue: f64, alpha: f64) -> color"
        ],
        "python": [
          "def rgba_color_from_double(red, green, blue, alpha):"
        ],
        "pascal": [
          "function RGBAColor(red: Double; green: Double; blue: Double; alpha: Double): Color"
        ],
        "csharp": [
          "public static Color Color.RGBAColor(double red, double green, double blue, double alpha);",
          "public static Color SplashKit.RGBAColor(double red, double green, double blue, double alpha);"
        ]
      }
    },
    {
      "signature": "color rgba_color(int red,int green,int blue,int alpha);",
      "name": "rgba_color",
      "method_name": "rgba_color",
      "unique_global_name": "rgba_color",
      "unique_method_name": ".rgba_color",
      "suffix_name": null,
      "description": "Gets a color given its color components. Each of the components has\na value between 0 and 255.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "The color from its different component",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "red": {
          "type": "int",
          "description": "The red component (between 0 and 255)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "green": {
          "type": "int",
          "description": "The green component (between 0 and 255)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "blue": {
          "type": "int",
          "description": "The blue component (between 0 and 255)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "alpha": {
          "type": "int",
          "description": "The alpha (opacity) component (between 0 and 255)",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "method": "rgba_color",
        "static": "color",
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color rgba_color(int red, int green, int blue, int alpha)"
        ],
        "rust": [
          "pub fn rgba_color(red: i32, green: i32, blue: i32, alpha: i32) -> color"
        ],
        "python": [
          "def rgba_color(red, green, blue, alpha):"
        ],
        "pascal": [
          "function RGBAColor(red: Integer; green: Integer; blue: Integer; alpha: Integer): Color"
        ],
        "csharp": [
          "public static Color Color.RGBAColor(int red, int green, int blue, int alpha);",
          "public static Color SplashKit.RGBAColor(int red, int green, int blue, int alpha);"
        ]
      }
    },
    {
      "signature": "double saturation_of(color c);",
      "name": "saturation_of",
      "method_name": null,
      "unique_global_name": "saturation_of",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns the saturation of the supplied color.",
      "brief": null,
      "return": {
        "type": "double",
        "description": "The saturation component of the color",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "c": {
          "type": "color",
          "description": "The color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "double saturation_of(color c)"
        ],
        "rust": [
          "pub fn saturation_of(c: color) -> f64"
        ],
        "python": [
          "def saturation_of(c):"
        ],
        "pascal": [
          "function SaturationOf(c: Color): Double"
        ],
        "csharp": [
          "public static double SplashKit.SaturationOf(Color c);"
        ]
      }
    },
    {
      "signature": "color string_to_color(string str);",
      "name": "string_to_color",
      "method_name": null,
      "unique_global_name": "string_to_color",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Returns a color for the passed in color string.\nThe format must be #, followed by the hex values\nfor the red, green, blue, and alpha components\nof the color.",
      "brief": null,
      "return": {
        "type": "color",
        "description": "The color represented in the string",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "str": {
          "type": "string",
          "description": "The hex string representing the color",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "color"
      },
      "signatures": {
        "cpp": [
          "color string_to_color(string str)"
        ],
        "rust": [
          "pub fn string_to_color(str: String) -> color"
        ],
        "python": [
          "def string_to_color(str):"
        ],
        "pascal": [
          "function StringToColor(str: String): Color"
        ],
        "csharp": [
          "public static Color SplashKit.StringToColor(string str);"
        ]
      }
    }
  ]
}