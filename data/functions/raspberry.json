{
  "functions": [
    {
      "signature": "bool has_gpio();",
      "name": "has_gpio",
      "method_name": null,
      "unique_global_name": "has_gpio",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "Checks if the system has GPIO capabilities.",
      "brief": null,
      "return": {
        "type": "bool",
        "description": "true if the system has GPIO capabilities, false otherwise.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "bool has_gpio()"
        ],
        "rust": [
          "pub fn has_gpio() -> bool"
        ],
        "python": [
          "def has_gpio():"
        ],
        "pascal": [
          "function HasGpio(): Boolean"
        ],
        "csharp": [
          "public static bool Raspberry.HasGpio();",
          "public static bool SplashKit.HasGpio();"
        ]
      }
    },
    {
      "signature": "void raspi_cleanup();",
      "name": "raspi_cleanup",
      "method_name": null,
      "unique_global_name": "raspi_cleanup",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function should be called when you are finished using the GPIO library. It sets all pin modes to INPUT and values to LOW.",
      "brief": "Cleans up and releases any resources used by the GPIO library.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_cleanup()"
        ],
        "rust": [
          "pub fn raspi_cleanup()"
        ],
        "python": [
          "def raspi_cleanup():"
        ],
        "pascal": [
          "procedure RaspiCleanup()"
        ],
        "csharp": [
          "public static void Raspberry.RaspiCleanup();",
          "public static void SplashKit.RaspiCleanup();"
        ]
      }
    },
    {
      "signature": "pin_modes raspi_get_mode(pins pin);",
      "name": "raspi_get_mode",
      "method_name": null,
      "unique_global_name": "raspi_get_mode",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function retrieves the mode of the specified pin.",
      "brief": "Gets the mode of the specified pin.",
      "return": {
        "type": "pin_modes",
        "description": "The mode of the pin.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to get the mode for.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "pin_modes raspi_get_mode(pins pin)"
        ],
        "rust": [
          "pub fn raspi_get_mode(pin: pins) -> pin_modes"
        ],
        "python": [
          "def raspi_get_mode(pin):"
        ],
        "pascal": [
          "function RaspiGetMode(pin: Pins): PinModes"
        ],
        "csharp": [
          "public static PinModes Raspberry.RaspiGetMode(Pins pin);",
          "public static PinModes SplashKit.RaspiGetMode(Pins pin);"
        ]
      }
    },
    {
      "signature": "void raspi_init();",
      "name": "raspi_init",
      "method_name": null,
      "unique_global_name": "raspi_init",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function initializes the GPIO library for use. It should be called before any other GPIO functions.",
      "brief": "Initializes the GPIO library.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {},
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_init()"
        ],
        "rust": [
          "pub fn raspi_init()"
        ],
        "python": [
          "def raspi_init():"
        ],
        "pascal": [
          "procedure RaspiInit()"
        ],
        "csharp": [
          "public static void Raspberry.RaspiInit();",
          "public static void SplashKit.RaspiInit();"
        ]
      }
    },
    {
      "signature": "pin_values raspi_read(pins pin);",
      "name": "raspi_read",
      "method_name": null,
      "unique_global_name": "raspi_read",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function reads the value from the specified pin.",
      "brief": "Reads the value from the specified pin.",
      "return": {
        "type": "pin_values",
        "description": "The value read from the pin.",
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to read the value from.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "pin_values raspi_read(pins pin)"
        ],
        "rust": [
          "pub fn raspi_read(pin: pins) -> pin_values"
        ],
        "python": [
          "def raspi_read(pin):"
        ],
        "pascal": [
          "function RaspiRead(pin: Pins): PinValues"
        ],
        "csharp": [
          "public static PinValues Raspberry.RaspiRead(Pins pin);",
          "public static PinValues SplashKit.RaspiRead(Pins pin);"
        ]
      }
    },
    {
      "signature": "void raspi_set_mode(pins pin,pin_modes mode);",
      "name": "raspi_set_mode",
      "method_name": null,
      "unique_global_name": "raspi_set_mode",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function sets the mode of the specified pin to the specified mode.",
      "brief": "Sets the mode of the specified pin.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to set the mode for.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "mode": {
          "type": "pin_modes",
          "description": "The mode to set for the pin.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_set_mode(pins pin, pin_modes mode)"
        ],
        "rust": [
          "pub fn raspi_set_mode(pin: pins, mode: pin_modes)"
        ],
        "python": [
          "def raspi_set_mode(pin, mode):"
        ],
        "pascal": [
          "procedure RaspiSetMode(pin: Pins; mode: PinModes)"
        ],
        "csharp": [
          "public static void Raspberry.RaspiSetMode(Pins pin, PinModes mode);",
          "public static void SplashKit.RaspiSetMode(Pins pin, PinModes mode);"
        ]
      }
    },
    {
      "signature": "void raspi_set_pull_up_down(pins pin,pull_up_down pud);",
      "name": "raspi_set_pull_up_down",
      "method_name": null,
      "unique_global_name": "raspi_set_pull_up_down",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function sets the pull-up/down mode for the specified pin.",
      "brief": "Sets the pull up/down mode for the specified pin.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to set the pull up/down mode for.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "pud": {
          "type": "pull_up_down",
          "description": "The pull up/down mode to set for the pin.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_set_pull_up_down(pins pin, pull_up_down pud)"
        ],
        "rust": [
          "pub fn raspi_set_pull_up_down(pin: pins, pud: pull_up_down)"
        ],
        "python": [
          "def raspi_set_pull_up_down(pin, pud):"
        ],
        "pascal": [
          "procedure RaspiSetPullUpDown(pin: Pins; pud: PullUpDown)"
        ],
        "csharp": [
          "public static void Raspberry.RaspiSetPullUpDown(Pins pin, PullUpDown pud);",
          "public static void SplashKit.RaspiSetPullUpDown(Pins pin, PullUpDown pud);"
        ]
      }
    },
    {
      "signature": "void raspi_set_pwm_dutycycle(pins pin,int dutycycle);",
      "name": "raspi_set_pwm_dutycycle",
      "method_name": null,
      "unique_global_name": "raspi_set_pwm_dutycycle",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function sets the PWM duty cycle for the specified pin.",
      "brief": "Sets the PWM duty cycle for the specified pin.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to set the PWM duty cycle for.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "dutycycle": {
          "type": "int",
          "description": "The PWM duty cycle to set for the pin.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_set_pwm_dutycycle(pins pin, int dutycycle)"
        ],
        "rust": [
          "pub fn raspi_set_pwm_dutycycle(pin: pins, dutycycle: i32)"
        ],
        "python": [
          "def raspi_set_pwm_dutycycle(pin, dutycycle):"
        ],
        "pascal": [
          "procedure RaspiSetPwmDutycycle(pin: Pins; dutycycle: Integer)"
        ],
        "csharp": [
          "public static void Raspberry.RaspiSetPwmDutycycle(Pins pin, int dutycycle);",
          "public static void SplashKit.RaspiSetPwmDutycycle(Pins pin, int dutycycle);"
        ]
      }
    },
    {
      "signature": "void raspi_set_pwm_frequency(pins pin,int frequency);",
      "name": "raspi_set_pwm_frequency",
      "method_name": null,
      "unique_global_name": "raspi_set_pwm_frequency",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function sets the PWM frequency for the specified pin.",
      "brief": "Sets the PWM frequency for the specified pin.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to set the PWM frequency for.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "frequency": {
          "type": "int",
          "description": "The PWM frequency to set for the pin.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_set_pwm_frequency(pins pin, int frequency)"
        ],
        "rust": [
          "pub fn raspi_set_pwm_frequency(pin: pins, frequency: i32)"
        ],
        "python": [
          "def raspi_set_pwm_frequency(pin, frequency):"
        ],
        "pascal": [
          "procedure RaspiSetPwmFrequency(pin: Pins; frequency: Integer)"
        ],
        "csharp": [
          "public static void Raspberry.RaspiSetPwmFrequency(Pins pin, int frequency);",
          "public static void SplashKit.RaspiSetPwmFrequency(Pins pin, int frequency);"
        ]
      }
    },
    {
      "signature": "void raspi_set_pwm_range(pins pin,int range);",
      "name": "raspi_set_pwm_range",
      "method_name": null,
      "unique_global_name": "raspi_set_pwm_range",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function sets the PWM range for the specified pin.",
      "brief": "Sets the PWM range for the specified pin.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to set the PWM range for.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "range": {
          "type": "int",
          "description": "The PWM range to set for the pin.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_set_pwm_range(pins pin, int range)"
        ],
        "rust": [
          "pub fn raspi_set_pwm_range(pin: pins, range: i32)"
        ],
        "python": [
          "def raspi_set_pwm_range(pin, range):"
        ],
        "pascal": [
          "procedure RaspiSetPwmRange(pin: Pins; range: Integer)"
        ],
        "csharp": [
          "public static void Raspberry.RaspiSetPwmRange(Pins pin, int range);",
          "public static void SplashKit.RaspiSetPwmRange(Pins pin, int range);"
        ]
      }
    },
    {
      "signature": "void raspi_write(pins pin,pin_values value);",
      "name": "raspi_write",
      "method_name": null,
      "unique_global_name": "raspi_write",
      "unique_method_name": null,
      "suffix_name": null,
      "description": "This function writes the specified value to the specified pin.",
      "brief": "Writes a value to the specified pin.",
      "return": {
        "type": "void",
        "description": null,
        "is_pointer": false,
        "is_reference": false,
        "is_vector": false,
        "type_parameter": null
      },
      "parameters": {
        "pin": {
          "type": "pins",
          "description": "The pin to write the value to.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        },
        "value": {
          "type": "pin_values",
          "description": "The value to write to the pin.",
          "is_pointer": false,
          "is_const": false,
          "is_reference": false,
          "is_array": false,
          "array_dimension_sizes": [],
          "is_vector": false,
          "type_parameter": null
        }
      },
      "attributes": {
        "group": "raspberry",
        "static": "raspberry"
      },
      "signatures": {
        "cpp": [
          "void raspi_write(pins pin, pin_values value)"
        ],
        "rust": [
          "pub fn raspi_write(pin: pins, value: pin_values)"
        ],
        "python": [
          "def raspi_write(pin, value):"
        ],
        "pascal": [
          "procedure RaspiWrite(pin: Pins; value: PinValues)"
        ],
        "csharp": [
          "public static void Raspberry.RaspiWrite(Pins pin, PinValues value);",
          "public static void SplashKit.RaspiWrite(Pins pin, PinValues value);"
        ]
      }
    }
  ]
}